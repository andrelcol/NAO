<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Input name="ALChestButton/DoubleClickOccurred" type="0" type_size="1" nature="4" stm_value_name="ALChestButton/DoubleClickOccurred" inner="1" tooltip="ALChestButton/DoubleClickOccurred desc" id="4" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="84.0896">
                        <Box name="Divulgacao Evento" id="6" localization="8" tooltip="" x="553" y="405">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="6_story_fin" id="2" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="494" y="556">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        pass

    def onInput_onStop(self):
        self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="315">
                                                    <BehaviorLayer name="LED">
                                                        <BehaviorKeyframe name="music" index="30">
                                                            <Diagram scale="100">
                                                                <Box name="Light_SpeakEyes" id="1" localization="8" tooltip="Use this gaze when Nao has to speak.&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_SpeakEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="209" y="132">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onStart(self):
    rDuration = 0.05;
    ALLeds.fadeRGB( "FaceLeds", 0x8585ff, rDuration );
    self.onStopped()

  def onInput_onStop(self):
    pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="normal2" index="268">
                                                            <Diagram scale="100">
                                                                <Box name="Light_WaitingEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Waiting&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_WaitingEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="256" y="173">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    rDuration = 1.0;
    ALLeds.fadeRGB( "FaceLeds", 0x00ff00, rDuration );
    time.sleep( rDuration );

    while( not self.bMustStop ):
      rTime=1.0
      ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLedsBottom", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.post.fadeRGB( "FaceLedsTop", 0x00ff00, rTime );
      ALLeds.fadeRGB( "FaceLedsBottom", 0x00ff00, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="fx">
                                                        <BehaviorKeyframe name="music" index="25">
                                                            <Diagram scale="100">
                                                                <Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="112" y="30">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/music-sw-fade.wav" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                    <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                        <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                    </Box>
                                                                                    <Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                                        <bitmap>media/images/box/folder.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("File path"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                        <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-3.2544" />
                                                            <Key frame="80" value="2.28278" />
                                                            <Key frame="286" value="2.107" />
                                                            <Key frame="315" value="12.9177" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-5.45169" />
                                                            <Key frame="80" value="30.6718" />
                                                            <Key frame="286" value="-15.6471" />
                                                            <Key frame="315" value="6.23791" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="57.303" />
                                                            <Key frame="80" value="31.9902" />
                                                            <Key frame="286" value="12.654" />
                                                            <Key frame="311" value="85.2526" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="1.93121" />
                                                            <Key frame="80" value="24.6952" />
                                                            <Key frame="286" value="21.5311" />
                                                            <Key frame="311" value="14.1482" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-63.0208" />
                                                            <Key frame="80" value="-14.8561" />
                                                            <Key frame="286" value="-5.10012" />
                                                            <Key frame="311" value="-45.1787" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-62.8402" />
                                                            <Key frame="80" value="-88.5046" />
                                                            <Key frame="286" value="-89.2077" />
                                                            <Key frame="311" value="-41.4825" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-2.90283" />
                                                            <Key frame="80" value="-55.6379" />
                                                            <Key frame="286" value="-63.8997" />
                                                            <Key frame="309" value="-22.5027" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="0.126935" />
                                                            <Key frame="80" value="0.143299" />
                                                            <Key frame="286" value="0.141481" />
                                                            <Key frame="309" value="0.142935" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="68.9095" />
                                                            <Key frame="80" value="40.3447" />
                                                            <Key frame="286" value="24.5242" />
                                                            <Key frame="311" value="77.3471" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-4.92434" />
                                                            <Key frame="80" value="-16.3503" />
                                                            <Key frame="286" value="-19.3386" />
                                                            <Key frame="311" value="-6.15482" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="61.9613" />
                                                            <Key frame="80" value="18.1912" />
                                                            <Key frame="286" value="17.3123" />
                                                            <Key frame="311" value="38.7578" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="80.9507" />
                                                            <Key frame="80" value="88.9488" />
                                                            <Key frame="286" value="87.6305" />
                                                            <Key frame="311" value="51.507" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="59.8519" />
                                                            <Key frame="80" value="55.3694" />
                                                            <Key frame="286" value="45.7013" />
                                                            <Key frame="309" value="74.8813" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="0.329844" />
                                                            <Key frame="80" value="0.331298" />
                                                            <Key frame="286" value="0.330571" />
                                                            <Key frame="309" value="0.331298" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-38.8481" />
                                                            <Key frame="72" value="-25.7523" />
                                                            <Key frame="80" value="-25.7523" />
                                                            <Key frame="286" value="-11.1622" />
                                                            <Key frame="314" value="-27.9496" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="15.3811" />
                                                            <Key frame="72" value="2.46097" />
                                                            <Key frame="80" value="2.46097" />
                                                            <Key frame="286" value="-1.0547" />
                                                            <Key frame="314" value="17.051" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-39.8635" />
                                                            <Key frame="72" value="-34.6779" />
                                                            <Key frame="80" value="-34.6779" />
                                                            <Key frame="286" value="6.36752" />
                                                            <Key frame="314" value="18.145" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="123.233" />
                                                            <Key frame="72" value="123.146" />
                                                            <Key frame="80" value="123.146" />
                                                            <Key frame="286" value="0" />
                                                            <Key frame="314" value="14.9509" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-54.102" />
                                                            <Key frame="72" value="-67.6373" />
                                                            <Key frame="80" value="-67.6373" />
                                                            <Key frame="286" value="3.02763" />
                                                            <Key frame="314" value="-7.51937" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-5.97664" />
                                                            <Key frame="72" value="0.351567" />
                                                            <Key frame="80" value="0.351567" />
                                                            <Key frame="286" value="0.351567" />
                                                            <Key frame="314" value="-9.49231" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-0.966809" />
                                                            <Key frame="72" value="1.40627" />
                                                            <Key frame="80" value="1.40627" />
                                                            <Key frame="286" value="-4.04302" />
                                                            <Key frame="314" value="-4.92194" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-27.4708" />
                                                            <Key frame="72" value="-35.6447" />
                                                            <Key frame="80" value="-35.6447" />
                                                            <Key frame="286" value="7.51011" />
                                                            <Key frame="314" value="27.8242" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="123.058" />
                                                            <Key frame="72" value="122.706" />
                                                            <Key frame="80" value="122.706" />
                                                            <Key frame="286" value="0" />
                                                            <Key frame="314" value="0" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-66.7584" />
                                                            <Key frame="72" value="-66.5826" />
                                                            <Key frame="80" value="-66.5826" />
                                                            <Key frame="286" value="2.3245" />
                                                            <Key frame="314" value="2.50029" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-3.33989" />
                                                            <Key frame="72" value="-2.54886" />
                                                            <Key frame="80" value="-2.54886" />
                                                            <Key frame="286" value="5.09772" />
                                                            <Key frame="314" value="4.04302" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                                <Resource name="Standing" type="Lock" timeout="0" />
                                                <Resource name="HeadYaw" type="Lock" timeout="0" />
                                                <Resource name="HeadPitch" type="Lock" timeout="0" />
                                                <Resource name="LShoulderPitch" type="Lock" timeout="0" />
                                                <Resource name="LShoulderRoll" type="Lock" timeout="0" />
                                                <Resource name="LElbowRoll" type="Lock" timeout="0" />
                                                <Resource name="LElbowYaw" type="Lock" timeout="0" />
                                                <Resource name="LWristYaw" type="Lock" timeout="0" />
                                                <Resource name="LHand" type="Lock" timeout="0" />
                                                <Resource name="RShoulderPitch" type="Lock" timeout="0" />
                                                <Resource name="RShoulderRoll" type="Lock" timeout="0" />
                                                <Resource name="RElbowRoll" type="Lock" timeout="0" />
                                                <Resource name="RElbowYaw" type="Lock" timeout="0" />
                                                <Resource name="RWristYaw" type="Lock" timeout="0" />
                                                <Resource name="RHand" type="Lock" timeout="0" />
                                                <Resource name="LHipYawPitch" type="Lock" timeout="0" />
                                                <Resource name="LHipRoll" type="Lock" timeout="0" />
                                                <Resource name="LHipPitch" type="Lock" timeout="0" />
                                                <Resource name="LKneePitch" type="Lock" timeout="0" />
                                                <Resource name="LAnklePitch" type="Lock" timeout="0" />
                                                <Resource name="LAnkleRoll" type="Lock" timeout="0" />
                                                <Resource name="RHipRoll" type="Lock" timeout="0" />
                                                <Resource name="RHipPitch" type="Lock" timeout="0" />
                                                <Resource name="RKneePitch" type="Lock" timeout="0" />
                                                <Resource name="RAnklePitch" type="Lock" timeout="0" />
                                                <Resource name="RAnkleRoll" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Rest" id="4" localization="0" tooltip="Call a Rest process.&#x0A;Apply crouch posture if the robot is Stand then unStiff all joints" x="970" y="123">
                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.rest()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                                <Resource name="Stiffness" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Animated Say" id="5" localization="8" tooltip="Say some text with animations. Note that you must open the box to enter the text." x="658" y="132">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="90" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Parameter name="Body language mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user. ex: ^start(...) or ^tag(...)&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                                    <Choice value="disabled" />
                                                    <Choice value="random" />
                                                    <Choice value="contextual" />
                                                </Parameter>
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Animated Say Text" id="2" localization="8" tooltip="Say the text received on its input and move during its speech." x="578" y="34">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.animSpeech = ALProxy('ALAnimatedSpeech')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.animSpeech.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            configuration =\
            {"bodyLanguageMode":self.getParameter("Body language mode")}
            id = self.animSpeech.post.say(str(sentence), configuration)
            self.ids.append(id)
            self.animSpeech.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                    <Parameter name="Body language mode" inherits_from_parent="1" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user. ex: ^start(...) or ^tag(...)&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                                                        <Choice value="disabled" />
                                                                        <Choice value="random" />
                                                                        <Choice value="contextual" />
                                                                    </Parameter>
                                                                </Box>
                                                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="276" y="74">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " ^start(animations/Stand/Gestures/Hey_1) Ahoj ^wait(animations/Stand/Gestures/Hey_1) ",
			"Danish" : " ^start(animations/Stand/Gestures/Hey_1) Hej ^wait(animations/Stand/Gestures/Hey_1) ",
			"German" : " ^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1) ",
			"Greek" : "  ",
			"English" : " ^start(animations/Stand/Gestures/Hey_1) Hello ^wait(animations/Stand/Gestures/Hey_1) ",
			"Spanish" : " ^start(animations/Stand/Gestures/Hey_1) Hola ^wait(animations/Stand/Gestures/Hey_1) ",
			"Finnish" : " ^start(animations/Stand/Gestures/Hey_1) Hei ^wait(animations/Stand/Gestures/Hey_1) ",
			"French" : " ^start(animations/Stand/Gestures/Hey_1) Bonjour ^wait(animations/Stand/Gestures/Hey_1) ",
			"Italian" : " ^start(animations/Stand/Gestures/Hey_1) Ciao ^wait(animations/Stand/Gestures/Hey_1) ",
			"Japanese" : " watashi wa konoju o ai suru ",
			"Korean" : " ^start(animations/Stand/Gestures/Hey_1) 안녕하세요 ^wait(animations/Stand/Gestures/Hey_1) ",
			"Dutch" : " ^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1) ",
			"Norwegian" : "  ",
			"Polish" : " ^start(animations/Stand/Gestures/Hey_1) Cześć ^wait(animations/Stand/Gestures/Hey_1) ",
			"Brazilian" : " Olá, sejam todos bem vindos ao Engenharia na comunidade, e ao colégio almirante Barroso. Estamos aqui hoje para apresentar os projetos desenvolvidos pelos estudantes, da faculdade de engenharia da U F J F. Fiquem à vontade para tirar dúvidas, e divirtam-se! ",
			"Portuguese" : " ^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1) ",
			"Russian" : " ^start(animations/Stand/Gestures/Hey_1) Привет ^wait(animations/Stand/Gestures/Hey_1) ",
			"Swedish" : " ^start(animations/Stand/Gestures/Hey_1) Hallå ^wait(animations/Stand/Gestures/Hey_1) ",
			"Turkish" : " ^start(animations/Stand/Gestures/Hey_1) Merhaba ^wait(animations/Stand/Gestures/Hey_1) ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <arabic>
                                                                            <![CDATA[]]>
</arabic>
                                                                        <czech>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Ahoj ^wait(animations/Stand/Gestures/Hey_1)]]>
</czech>
                                                                        <danish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hej ^wait(animations/Stand/Gestures/Hey_1)]]>
</danish>
                                                                        <german>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1)]]>
</german>
                                                                        <greek>
                                                                            <![CDATA[]]>
</greek>
                                                                        <english>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hello ^wait(animations/Stand/Gestures/Hey_1)]]>
</english>
                                                                        <spanish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hola ^wait(animations/Stand/Gestures/Hey_1)]]>
</spanish>
                                                                        <finnish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hei ^wait(animations/Stand/Gestures/Hey_1)]]>
</finnish>
                                                                        <french>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Bonjour ^wait(animations/Stand/Gestures/Hey_1)]]>
</french>
                                                                        <italian>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Ciao ^wait(animations/Stand/Gestures/Hey_1)]]>
</italian>
                                                                        <japanese>
                                                                            <![CDATA[watashi wa konoju o ai suru]]>
</japanese>
                                                                        <korean>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) 안녕하세요 ^wait(animations/Stand/Gestures/Hey_1)]]>
</korean>
                                                                        <dutch>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1)]]>
</dutch>
                                                                        <norwegian>
                                                                            <![CDATA[]]>
</norwegian>
                                                                        <polish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Cześć ^wait(animations/Stand/Gestures/Hey_1)]]>
</polish>
                                                                        <brazilian>
                                                                            <![CDATA[Olá, sejam todos bem vindos ao Engenharia na comunidade, e ao colégio almirante Barroso. Estamos aqui hoje para apresentar os projetos desenvolvidos pelos estudantes, da faculdade de engenharia da U F J F. Fiquem à vontade para tirar dúvidas, e divirtam-se!]]>
</brazilian>
                                                                        <portuguese>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1)]]>
</portuguese>
                                                                        <russian>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Привет ^wait(animations/Stand/Gestures/Hey_1)]]>
</russian>
                                                                        <swedish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallå ^wait(animations/Stand/Gestures/Hey_1)]]>
</swedish>
                                                                        <turkish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Merhaba ^wait(animations/Stand/Gestures/Hey_1)]]>
</turkish>
                                                                        <chinese>
                                                                            <![CDATA[]]>
</chinese>
                                                                        <language>16</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="134" y="342">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="File name" inherits_from_parent="0" content_type="4" value="" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                    <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                        <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                    </Box>
                                                                                    <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                                        <bitmap>media/images/box/folder.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                        <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Audio player" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Hands" id="3" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="365" y="392">
                                                                    <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                                                        <Choice value="Both" />
                                                                        <Choice value="Left" />
                                                                        <Choice value="Right" />
                                                                    </Parameter>
                                                                    <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Open the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                                                        <Choice value="Open the hand" />
                                                                        <Choice value="Close the hand" />
                                                                    </Parameter>
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="130" y="86">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="dance_Thriller" id="5" localization="8" tooltip="Thriller - Michael Jackson" x="660" y="275">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup herehkgj
        ""

    def onInput_onStart(self):
        #self.onStopped() # activate output of the box
        ""

    def onInput_onStop(self):
        ""]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="1308">
                                <BehaviorLayer name="music">
                                    <BehaviorKeyframe name="music" index="70">
                                        <Diagram scale="100">
                                            <Box name="Enter name here" id="1" localization="8" tooltip="Enter tooltip here" plugin="multimediabrowse_plugin" x="98" y="87">
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped(ALFrameManager.getBehaviorPath(self.behaviorId) + "/Thriller-music-mp3.mp3")]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <relative_path>
                                                        <![CDATA[/Thriller-music-mp3.mp3]]>
</relative_path>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="PlayMusic" id="2" localization="8" tooltip="Play the music asked, from AL_DIR/data/wav/" x="348" y="99">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []

    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            self.playerStop.stop(id)

    def onInput_onStart(self, p):
        id = self.player.post.playFile(p)
        self.ids.append(id)
        self.player.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="LED">
                                    <BehaviorKeyframe name="close_eyes" index="1">
                                        <Diagram scale="100">
                                            <Box name="FaceLeds" id="1" localization="8" tooltip="Set the face leds. Note that you can enter this box to set other colors ! Very nice !" x="144" y="117">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="100">
                                                                <Box name="Color Edit" id="1" localization="8" tooltip="Can transmit a table of number [R,G,B], set by a Qt widget." plugin="coloredit_plugin" x="90" y="184">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 255, 0])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#00ff00</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Box name="FaceLeds" id="2" localization="8" tooltip="Turns on and off the face LEDs." x="333" y="109">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.time = 0.2
        self.ledName = "FaceLeds"
        self.r = 1
        self.g = 1
        self.b = 1
        self.colorSet = False # Here just to avoid coloring the leds too soon... Will just wait 1 second to get the colors !

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def getRGB(self):
        return 256*256*self.r + 256*self.g + self.b
        pass

    def clampColor(self, p):
        if(p < 0):
            p = 0
        if(p > 255):
            p = 255
        return p

    def onInput_onStart(self):
        if(not self.colorSet):
            time.sleep(1)

        ALLeds.fadeRGB(self.ledName, self.getRGB(), self.time)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        ALLeds.fade(self.ledName, 0.0, self.time)
        self.onStopped() # activate output of the box

    def onInput_setRGB(self, p):
        self.r = self.clampColor(p[0])
        self.g = self.clampColor(p[1])
        self.b = self.clampColor(p[2])
        self.colorSet = True]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Input name="setRGB" type="2" type_size="3" nature="1" inner="0" tooltip="Set the 3 colors in one call, and call to fadeRGB.&#x0A;This input help to debug your colors." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="FaceLeds" id="2" localization="8" tooltip="Set the face leds. Note that you can enter this box to set other colors ! Very nice !" x="320" y="128">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="100">
                                                                <Box name="Color Edit" id="1" localization="8" tooltip="Can transmit a table of number [R,G,B], set by a Qt widget." plugin="coloredit_plugin" x="90" y="184">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 0, 0])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#000000</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Box name="FaceLeds" id="2" localization="8" tooltip="Turns on and off the face LEDs." x="333" y="109">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.time = 1
        self.ledName = "FaceLeds"
        self.r = 1
        self.g = 1
        self.b = 1
        self.colorSet = False # Here just to avoid coloring the leds too soon... Will just wait 1 second to get the colors !

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def getRGB(self):
        return 256*256*self.r + 256*self.g + self.b
        pass

    def clampColor(self, p):
        if(p < 0):
            p = 0
        if(p > 255):
            p = 255
        return p

    def onInput_onStart(self):
        if(not self.colorSet):
            time.sleep(1)

        ALLeds.fadeRGB(self.ledName, self.getRGB(), self.time)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        ALLeds.fade(self.ledName, 0.0, self.time)
        self.onStopped() # activate output of the box

    def onInput_setRGB(self, p):
        self.r = self.clampColor(p[0])
        self.g = self.clampColor(p[1])
        self.b = self.clampColor(p[2])
        self.colorSet = True]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Input name="setRGB" type="2" type_size="3" nature="1" inner="0" tooltip="Set the 3 colors in one call, and call to fadeRGB.&#x0A;This input help to debug your colors." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="flash" index="71">
                                        <Diagram scale="100">
                                            <Box name="FaceLeds" id="1" localization="8" tooltip="Set the face leds. Note that you can enter this box to set other colors ! Very nice !" x="160" y="69">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="100">
                                                                <Box name="Color Edit" id="1" localization="8" tooltip="Can transmit a table of number [R,G,B], set by a Qt widget." plugin="coloredit_plugin" x="90" y="184">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#ffffff</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Box name="FaceLeds" id="2" localization="8" tooltip="Turns on and off the face LEDs." x="333" y="109">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.time = 0.1
        self.ledName = "FaceLeds"
        self.r = 1
        self.g = 1
        self.b = 1
        self.colorSet = False # Here just to avoid coloring the leds too soon... Will just wait 1 second to get the colors !

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def getRGB(self):
        return 256*256*self.r + 256*self.g + self.b
        pass

    def clampColor(self, p):
        if(p < 0):
            p = 0
        if(p > 255):
            p = 255
        return p

    def onInput_onStart(self):
        if(not self.colorSet):
            time.sleep(1)

        ALLeds.fadeRGB(self.ledName, self.getRGB(), self.time)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        ALLeds.fade(self.ledName, 0.0, self.time)
        self.onStopped() # activate output of the box

    def onInput_setRGB(self, p):
        self.r = self.clampColor(p[0])
        self.g = self.clampColor(p[1])
        self.b = self.clampColor(p[2])
        self.colorSet = True]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Input name="setRGB" type="2" type_size="3" nature="1" inner="0" tooltip="Set the 3 colors in one call, and call to fadeRGB.&#x0A;This input help to debug your colors." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="happy" index="362">
                                        <Diagram scale="100">
                                            <Box name="Light_AmusedEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Amusement&#x0A;*** ref box in: ./4_localize/animation/Lights/Pleasant/Light_AmusedEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="161" y="132">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x00ff00, rDuration );

    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="dance" index="459">
                                        <Diagram scale="100">
                                            <Box name="dance" id="1" localization="8" tooltip="Set the face leds. Note that you can enter this box to set other colors ! Very nice !" x="190" y="98">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="100">
                                                                <Box name="Color Edit" id="1" localization="8" tooltip="Can transmit a table of number [R,G,B], set by a Qt widget." plugin="coloredit_plugin" x="90" y="184">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#ffffff</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Box name="FaceLeds" id="2" localization="8" tooltip="Turns on and off the face LEDs." x="333" y="109">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.time = 1.0
        self.ledName = "FaceLeds"
        self.r = 1
        self.g = 1
        self.b = 1
        self.colorSet = False # Here just to avoid coloring the leds too soon... Will just wait 1 second to get the colors !

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def getRGB(self):
        return 256*256*self.r + 256*self.g + self.b
        pass

    def clampColor(self, p):
        if(p < 0):
            p = 0
        if(p > 255):
            p = 255
        return p

    def onInput_onStart(self):
        if(not self.colorSet):
            time.sleep(1)

        ALLeds.fadeRGB(self.ledName, self.getRGB(), self.time)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        ALLeds.fade(self.ledName, 0.0, self.time)
        self.onStopped() # activate output of the box

    def onInput_setRGB(self, p):
        self.r = self.clampColor(p[0])
        self.g = self.clampColor(p[1])
        self.b = self.clampColor(p[2])
        self.colorSet = True]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Input name="setRGB" type="2" type_size="3" nature="1" inner="0" tooltip="Set the 3 colors in one call, and call to fadeRGB.&#x0A;This input help to debug your colors." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="happy2" index="573">
                                        <Diagram scale="100">
                                            <Box name="Light_AmusedEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Amusement&#x0A;*** ref box in: ./4_localize/animation/Lights/Pleasant/Light_AmusedEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="155" y="103">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x00ff00, rDuration );

    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="dance2" index="670">
                                        <Diagram scale="100">
                                            <Box name="dance" id="1" localization="8" tooltip="Set the face leds. Note that you can enter this box to set other colors ! Very nice !" x="136" y="82">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="100">
                                                                <Box name="Color Edit" id="1" localization="8" tooltip="Can transmit a table of number [R,G,B], set by a Qt widget." plugin="coloredit_plugin" x="90" y="184">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#ffffff</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Box name="FaceLeds" id="2" localization="8" tooltip="Turns on and off the face LEDs." x="333" y="109">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.time = 1.0
        self.ledName = "FaceLeds"
        self.r = 1
        self.g = 1
        self.b = 1
        self.colorSet = False # Here just to avoid coloring the leds too soon... Will just wait 1 second to get the colors !

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def getRGB(self):
        return 256*256*self.r + 256*self.g + self.b
        pass

    def clampColor(self, p):
        if(p < 0):
            p = 0
        if(p > 255):
            p = 255
        return p

    def onInput_onStart(self):
        if(not self.colorSet):
            time.sleep(1)

        ALLeds.fadeRGB(self.ledName, self.getRGB(), self.time)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        ALLeds.fade(self.ledName, 0.0, self.time)
        self.onStopped() # activate output of the box

    def onInput_setRGB(self, p):
        self.r = self.clampColor(p[0])
        self.g = self.clampColor(p[1])
        self.b = self.clampColor(p[2])
        self.colorSet = True]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Input name="setRGB" type="2" type_size="3" nature="1" inner="0" tooltip="Set the 3 colors in one call, and call to fadeRGB.&#x0A;This input help to debug your colors." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="monster" index="744">
                                        <Diagram scale="100">
                                            <Box name="Light_VeryAngryEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Great Anger&#x0A;*** ref box in: ./4_localize/animation/Lights/Unpleasant/Light_VeryAngryEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="196" y="102">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.1;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0xff4600, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0xff4600, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0xff4600, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x000000, rDuration );


    while( not self.bMustStop ):
      rTime = 0.1;
      ALLeds.post.fadeRGB( "FaceLedsTop", 0xff0000, rTime );
      ALLeds.post.fadeRGB( "FaceLedsInternal", 0xff0000, rTime );
      ALLeds.fadeRGB( "FaceLedsBottom", 0xff0000, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.post.fadeRGB( "FaceLedsTop", 0xff4600, rTime );
      ALLeds.post.fadeRGB( "FaceLedsInternal", 0xff4600, rTime );
      ALLeds.fadeRGB( "FaceLedsBottom", 0xff4600, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="monster2" index="846">
                                        <Diagram scale="100">
                                            <Box name="Light_PainEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Pain&#x0A;*** ref box in: ./4_localize/animation/Lights/Unpleasant/Light_PainEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="137" y="108">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
  """ comments """
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.5;
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0xffffff, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsTop", 0xffffff, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsExternal", 0xffffff, rDuration );
    ALLeds.fadeRGB( "FaceLedsInternal", 0xff0000, rDuration );

    while( not self.bMustStop ):
      rTime=0.5
      ALLeds.post.fadeRGB( "FaceLedsBottom", 0xff0000, rTime );
      ALLeds.post.fadeRGB( "FaceLedsTop", 0xff0000, rTime );
      ALLeds.post.fadeRGB( "FaceLedsExternal", 0xff0000, rTime );
      ALLeds.fadeRGB( "FaceLedsInternal", 0xffffff, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.post.fadeRGB( "FaceLedsBottom", 0xffffff, rTime );
      ALLeds.post.fadeRGB( "FaceLedsTop", 0xffffff, rTime );
      ALLeds.post.fadeRGB( "FaceLedsExternal", 0xffffff, rTime );
      ALLeds.fadeRGB( "FaceLedsInternal", 0xff0000, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="dance3" index="940">
                                        <Diagram scale="100">
                                            <Box name="dance" id="1" localization="8" tooltip="Set the face leds. Note that you can enter this box to set other colors ! Very nice !" x="164" y="105">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="100">
                                                                <Box name="Color Edit" id="1" localization="8" tooltip="Can transmit a table of number [R,G,B], set by a Qt widget." plugin="coloredit_plugin" x="90" y="184">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#ffffff</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Box name="FaceLeds" id="2" localization="8" tooltip="Turns on and off the face LEDs." x="333" y="109">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.time = 1.0
        self.ledName = "FaceLeds"
        self.r = 1
        self.g = 1
        self.b = 1
        self.colorSet = False # Here just to avoid coloring the leds too soon... Will just wait 1 second to get the colors !

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def getRGB(self):
        return 256*256*self.r + 256*self.g + self.b
        pass

    def clampColor(self, p):
        if(p < 0):
            p = 0
        if(p > 255):
            p = 255
        return p

    def onInput_onStart(self):
        if(not self.colorSet):
            time.sleep(1)

        ALLeds.fadeRGB(self.ledName, self.getRGB(), self.time)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        ALLeds.fade(self.ledName, 0.0, self.time)
        self.onStopped() # activate output of the box

    def onInput_setRGB(self, p):
        self.r = self.clampColor(p[0])
        self.g = self.clampColor(p[1])
        self.b = self.clampColor(p[2])
        self.colorSet = True]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Input name="setRGB" type="2" type_size="3" nature="1" inner="0" tooltip="Set the 3 colors in one call, and call to fadeRGB.&#x0A;This input help to debug your colors." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="end" index="1023">
                                        <Diagram scale="100">
                                            <Box name="end" id="1" localization="8" tooltip="Set the face leds. Note that you can enter this box to set other colors ! Very nice !" x="248" y="131">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="100">
                                                                <Box name="Color Edit" id="1" localization="8" tooltip="Can transmit a table of number [R,G,B], set by a Qt widget." plugin="coloredit_plugin" x="90" y="184">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 0, 0])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#000000</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Box name="FaceLeds" id="2" localization="8" tooltip="Turns on and off the face LEDs." x="333" y="109">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.time = 0.3
        self.ledName = "FaceLeds"
        self.r = 1
        self.g = 1
        self.b = 1
        self.colorSet = False # Here just to avoid coloring the leds too soon... Will just wait 1 second to get the colors !

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def getRGB(self):
        return 256*256*self.r + 256*self.g + self.b
        pass

    def clampColor(self, p):
        if(p < 0):
            p = 0
        if(p > 255):
            p = 255
        return p

    def onInput_onStart(self):
        if(not self.colorSet):
            time.sleep(1)

        ALLeds.fadeRGB(self.ledName, self.getRGB(), self.time)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        ALLeds.fade(self.ledName, 0.0, self.time)
        self.onStopped() # activate output of the box

    def onInput_setRGB(self, p):
        self.r = self.clampColor(p[0])
        self.g = self.clampColor(p[1])
        self.b = self.clampColor(p[2])
        self.colorSet = True]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Input name="setRGB" type="2" type_size="3" nature="1" inner="0" tooltip="Set the 3 colors in one call, and call to fadeRGB.&#x0A;This input help to debug your colors." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="evil" index="1056">
                                        <Diagram scale="100">
                                            <Box name="Light_VeryAngryEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Great Anger&#x0A;*** ref box in: ./4_localize/animation/Lights/Unpleasant/Light_VeryAngryEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="219" y="89">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.1;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0xff4600, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0xff4600, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0xff4600, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x000000, rDuration );


    while( not self.bMustStop ):
      rTime = 0.1;
      ALLeds.post.fadeRGB( "FaceLedsTop", 0xff0000, rTime );
      ALLeds.post.fadeRGB( "FaceLedsInternal", 0xff0000, rTime );
      ALLeds.fadeRGB( "FaceLedsBottom", 0xff0000, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.post.fadeRGB( "FaceLedsTop", 0xff4600, rTime );
      ALLeds.post.fadeRGB( "FaceLedsInternal", 0xff4600, rTime );
      ALLeds.fadeRGB( "FaceLedsBottom", 0xff4600, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="salut" index="1176">
                                        <Diagram scale="100">
                                            <Box name="end" id="1" localization="8" tooltip="Set the face leds. Note that you can enter this box to set other colors ! Very nice !" x="247" y="108">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="100">
                                                                <Box name="Color Edit" id="1" localization="8" tooltip="Can transmit a table of number [R,G,B], set by a Qt widget." plugin="coloredit_plugin" x="90" y="184">
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 0, 0])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#000000</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Box name="FaceLeds" id="2" localization="8" tooltip="Turns on and off the face LEDs." x="333" y="109">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.time = 0.3
        self.ledName = "FaceLeds"
        self.r = 1
        self.g = 1
        self.b = 1
        self.colorSet = False # Here just to avoid coloring the leds too soon... Will just wait 1 second to get the colors !

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def getRGB(self):
        return 256*256*self.r + 256*self.g + self.b
        pass

    def clampColor(self, p):
        if(p < 0):
            p = 0
        if(p > 255):
            p = 255
        return p

    def onInput_onStart(self):
        if(not self.colorSet):
            time.sleep(1)

        ALLeds.fadeRGB(self.ledName, self.getRGB(), self.time)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        ALLeds.fade(self.ledName, 0.0, self.time)
        self.onStopped() # activate output of the box

    def onInput_setRGB(self, p):
        self.r = self.clampColor(p[0])
        self.g = self.clampColor(p[1])
        self.b = self.clampColor(p[2])
        self.colorSet = True]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Input name="setRGB" type="2" type_size="3" nature="1" inner="0" tooltip="Set the 3 colors in one call, and call to fadeRGB.&#x0A;This input help to debug your colors." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="happy3" index="1255">
                                        <Diagram scale="100">
                                            <Box name="Light_AmusedEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Amusement&#x0A;*** ref box in: ./4_localize/animation/Lights/Pleasant/Light_AmusedEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="167" y="49">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 0.2;
    ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    ALLeds.post.fadeRGB( "FaceLedsBottom", 0x000000, rDuration );
    ALLeds.fadeRGB( "FaceLedsExternal", 0x00ff00, rDuration );

    while( not self.bMustStop ):
      rTime=0.2
      ALLeds.fadeRGB( "FaceLed7", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.fadeRGB( "FaceLed7", 0x00ffff, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="event">
                                    <BehaviorKeyframe name="exit" index="1308">
                                        <Diagram scale="100">
                                            <Link inputowner="0" indexofinput="4" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="Nao">
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="34" value="-26.8094" />
                                        <Key frame="69" value="-26.8094" />
                                        <Key frame="77" value="14.9392" />
                                        <Key frame="89" value="14.9392" />
                                        <Key frame="116" value="13.1814" />
                                        <Key frame="130" value="30.8476" />
                                        <Key frame="148" value="-29.3582" />
                                        <Key frame="168" value="-52.5617" />
                                        <Key frame="181" value="-1.23289" />
                                        <Key frame="194" value="-64.5149" />
                                        <Key frame="207" value="-3.60596" />
                                        <Key frame="219" value="-52.6495" />
                                        <Key frame="231" value="-3.60596" />
                                        <Key frame="244" value="-58.9778" />
                                        <Key frame="257" value="-0.969213" />
                                        <Key frame="269" value="-58.4504" />
                                        <Key frame="282" value="-0.969213" />
                                        <Key frame="294" value="-62.5813" />
                                        <Key frame="307" value="45.5255" />
                                        <Key frame="319" value="-12.3072" />
                                        <Key frame="332" value="56.9514" />
                                        <Key frame="357" value="-67.8548" />
                                        <Key frame="369" value="-4.92434" />
                                        <Key frame="382" value="-4.04542" />
                                        <Key frame="394" value="-4.92434" />
                                        <Key frame="407" value="-4.04542" />
                                        <Key frame="419" value="-4.92434" />
                                        <Key frame="432" value="-4.04542" />
                                        <Key frame="444" value="-4.48488" />
                                        <Key frame="469" value="31.9023" />
                                        <Key frame="482" value="-23.5574" />
                                        <Key frame="494" value="-3.07861" />
                                        <Key frame="507" value="4.12851" />
                                        <Key frame="519" value="28.2987" />
                                        <Key frame="544" value="-22.5906" />
                                        <Key frame="569" value="-0.881321" />
                                        <Key frame="581" value="-1.0571" />
                                        <Key frame="594" value="-24.4363" />
                                        <Key frame="606" value="-12" />
                                        <Key frame="619" value="2.28278" />
                                        <Key frame="632" value="-8.5279" />
                                        <Key frame="644" value="-7.03374" />
                                        <Key frame="657" value="-7.38531" />
                                        <Key frame="669" value="-7.03374" />
                                        <Key frame="682" value="-7.38531" />
                                        <Key frame="694" value="20.1248" />
                                        <Key frame="719" value="-43.7725" />
                                        <Key frame="744" value="30.8476" />
                                        <Key frame="753" value="-35.9501" />
                                        <Key frame="757" value="-35.3349" />
                                        <Key frame="769" value="-35.3349" />
                                        <Key frame="791" value="21.0037" />
                                        <Key frame="803" value="36.8242" />
                                        <Key frame="819" value="39.6368" />
                                        <Key frame="832" value="49.9201" />
                                        <Key frame="844" value="-0.705538" />
                                        <Key frame="857" value="-37.5322" />
                                        <Key frame="869" value="1.84332" />
                                        <Key frame="882" value="35.5937" />
                                        <Key frame="894" value="1.84332" />
                                        <Key frame="907" value="-37.5322" />
                                        <Key frame="919" value="1.84332" />
                                        <Key frame="932" value="35.5937" />
                                        <Key frame="957" value="6.85315" />
                                        <Key frame="969" value="-30.0614" />
                                        <Key frame="982" value="37.7031" />
                                        <Key frame="994" value="42.5372" />
                                        <Key frame="1007" value="6.58948" />
                                        <Key frame="1019" value="-42.5372" />
                                        <Key frame="1032" value="23.1131" />
                                        <Key frame="1044" value="-48.4307" />
                                        <Key frame="1139" value="6.50158" />
                                        <Key frame="1168" value="2.63435" />
                                        <Key frame="1212" value="-0.617646" />
                                        <Key frame="1258" value="-0.617646" />
                                        <Key frame="1281" value="-0.266079" />
                                        <Key frame="1305" value="-11.9557" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="34" value="25.3104" />
                                        <Key frame="69" value="25.3104" />
                                        <Key frame="77" value="-25.4031" />
                                        <Key frame="89" value="-25.4031" />
                                        <Key frame="116" value="21.1795" />
                                        <Key frame="130" value="28.4745" />
                                        <Key frame="148" value="26.0135" />
                                        <Key frame="168" value="-4.83645" />
                                        <Key frame="181" value="-4.74856" />
                                        <Key frame="194" value="18.6306" />
                                        <Key frame="207" value="-3.78175" />
                                        <Key frame="219" value="12.4782" />
                                        <Key frame="231" value="-3.78175" />
                                        <Key frame="244" value="-21.5359" />
                                        <Key frame="257" value="0.261271" />
                                        <Key frame="269" value="-20.9206" />
                                        <Key frame="282" value="0.261271" />
                                        <Key frame="294" value="11.7751" />
                                        <Key frame="307" value="-11.5162" />
                                        <Key frame="319" value="0.437054" />
                                        <Key frame="332" value="7.55628" />
                                        <Key frame="357" value="9.75358" />
                                        <Key frame="369" value="-4.48488" />
                                        <Key frame="382" value="-28.743" />
                                        <Key frame="394" value="-4.48488" />
                                        <Key frame="407" value="-28.743" />
                                        <Key frame="419" value="-4.48488" />
                                        <Key frame="432" value="-28.743" />
                                        <Key frame="444" value="-37.6201" />
                                        <Key frame="469" value="19.6853" />
                                        <Key frame="482" value="20.74" />
                                        <Key frame="494" value="-2.81494" />
                                        <Key frame="507" value="-21.7996" />
                                        <Key frame="519" value="13.7966" />
                                        <Key frame="544" value="29.6171" />
                                        <Key frame="569" value="6.23791" />
                                        <Key frame="581" value="5.62267" />
                                        <Key frame="594" value="23.1131" />
                                        <Key frame="606" value="30.496" />
                                        <Key frame="619" value="4.2164" />
                                        <Key frame="632" value="15.4665" />
                                        <Key frame="644" value="-10.4615" />
                                        <Key frame="657" value="4.91953" />
                                        <Key frame="669" value="-10.4615" />
                                        <Key frame="682" value="4.91953" />
                                        <Key frame="694" value="18.6306" />
                                        <Key frame="719" value="5.2711" />
                                        <Key frame="744" value="26.8046" />
                                        <Key frame="753" value="0.70073" />
                                        <Key frame="757" value="21.7947" />
                                        <Key frame="769" value="21.7947" />
                                        <Key frame="791" value="25.662" />
                                        <Key frame="803" value="19.5096" />
                                        <Key frame="819" value="0.349163" />
                                        <Key frame="832" value="-21.0964" />
                                        <Key frame="844" value="24.871" />
                                        <Key frame="857" value="-21.1843" />
                                        <Key frame="869" value="22.2342" />
                                        <Key frame="882" value="-17.3171" />
                                        <Key frame="894" value="22.2342" />
                                        <Key frame="907" value="-21.1843" />
                                        <Key frame="919" value="22.2342" />
                                        <Key frame="932" value="-17.3171" />
                                        <Key frame="957" value="-3.78175" />
                                        <Key frame="969" value="-36.3896" />
                                        <Key frame="982" value="15.3786" />
                                        <Key frame="994" value="22.7616" />
                                        <Key frame="1007" value="-31.3797" />
                                        <Key frame="1019" value="22.7616" />
                                        <Key frame="1032" value="29.9687" />
                                        <Key frame="1044" value="-22.3269" />
                                        <Key frame="1139" value="4.91953" />
                                        <Key frame="1168" value="-31.6434" />
                                        <Key frame="1212" value="27.5956" />
                                        <Key frame="1258" value="27.5956" />
                                        <Key frame="1281" value="-27.2488" />
                                        <Key frame="1305" value="4.04062" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="36" value="61.9613" />
                                        <Key frame="78" value="61.9613" />
                                        <Key frame="91" value="64.6859" />
                                        <Key frame="112" value="87.1862" />
                                        <Key frame="131" value="112.147" />
                                        <Key frame="151" value="92.8113" />
                                        <Key frame="170" value="77.6939" />
                                        <Key frame="176" value="78.5728" />
                                        <Key frame="183" value="75.4087" />
                                        <Key frame="195" value="89.2077" />
                                        <Key frame="208" value="98.7879" />
                                        <Key frame="220" value="88.5925" />
                                        <Key frame="232" value="37.3516" />
                                        <Key frame="245" value="94.1296" />
                                        <Key frame="258" value="94.1296" />
                                        <Key frame="270" value="94.1296" />
                                        <Key frame="283" value="94.1296" />
                                        <Key frame="295" value="66.0043" />
                                        <Key frame="308" value="74.0024" />
                                        <Key frame="320" value="62.7523" />
                                        <Key frame="333" value="59.8519" />
                                        <Key frame="343" value="61.6097" />
                                        <Key frame="351" value="76.9908" />
                                        <Key frame="370" value="-60.2961" />
                                        <Key frame="383" value="-47.2003" />
                                        <Key frame="395" value="-60.2961" />
                                        <Key frame="408" value="-47.2003" />
                                        <Key frame="420" value="-60.2961" />
                                        <Key frame="433" value="-47.2003" />
                                        <Key frame="445" value="-29.2703" />
                                        <Key frame="458" value="79.7154" />
                                        <Key frame="470" value="117.86" />
                                        <Key frame="483" value="120" />
                                        <Key frame="495" value="99.4031" />
                                        <Key frame="508" value="79.7154" />
                                        <Key frame="520" value="80.2476" />
                                        <Key frame="533" value="40.3447" />
                                        <Key frame="545" value="46.3213" />
                                        <Key frame="570" value="91.1413" />
                                        <Key frame="582" value="90.5261" />
                                        <Key frame="595" value="92.2839" />
                                        <Key frame="607" value="91.8445" />
                                        <Key frame="620" value="92.196" />
                                        <Key frame="633" value="92.196" />
                                        <Key frame="645" value="92.196" />
                                        <Key frame="658" value="91.9323" />
                                        <Key frame="670" value="91.9323" />
                                        <Key frame="683" value="92.0202" />
                                        <Key frame="695" value="79.8912" />
                                        <Key frame="720" value="-4.04542" />
                                        <Key frame="733" value="22.5858" />
                                        <Key frame="745" value="22.5858" />
                                        <Key frame="758" value="-1.145" />
                                        <Key frame="770" value="-1.145" />
                                        <Key frame="792" value="53.0842" />
                                        <Key frame="804" value="31.8144" />
                                        <Key frame="820" value="7.99574" />
                                        <Key frame="833" value="-13.9772" />
                                        <Key frame="845" value="52.5569" />
                                        <Key frame="858" value="50.9748" />
                                        <Key frame="883" value="50.799" />
                                        <Key frame="908" value="50.9748" />
                                        <Key frame="933" value="50.799" />
                                        <Key frame="945" value="59.0608" />
                                        <Key frame="958" value="16.9607" />
                                        <Key frame="970" value="-78.6655" />
                                        <Key frame="983" value="14.6755" />
                                        <Key frame="995" value="34.8906" />
                                        <Key frame="1008" value="-5.89115" />
                                        <Key frame="1020" value="-23.03" />
                                        <Key frame="1033" value="17.9275" />
                                        <Key frame="1045" value="76.815" />
                                        <Key frame="1135" value="77.606" />
                                        <Key frame="1166" value="85.0768" />
                                        <Key frame="1207" value="88.3288" />
                                        <Key frame="1256" value="88.3288" />
                                        <Key frame="1283" value="73.2114" />
                                        <Key frame="1308" value="91.405" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="36" value="4.91953" />
                                        <Key frame="78" value="4.91953" />
                                        <Key frame="91" value="6.58948" />
                                        <Key frame="112" value="6.76526" />
                                        <Key frame="131" value="12.8298" />
                                        <Key frame="151" value="1.66754" />
                                        <Key frame="170" value="1.22808" />
                                        <Key frame="176" value="1.22808" />
                                        <Key frame="183" value="4.30429" />
                                        <Key frame="195" value="1.49176" />
                                        <Key frame="208" value="45.2618" />
                                        <Key frame="220" value="27.7714" />
                                        <Key frame="232" value="1.22808" />
                                        <Key frame="245" value="52.2053" />
                                        <Key frame="258" value="68.1137" />
                                        <Key frame="270" value="52.2053" />
                                        <Key frame="283" value="68.1137" />
                                        <Key frame="295" value="3.1617" />
                                        <Key frame="308" value="84.8131" />
                                        <Key frame="320" value="8.25942" />
                                        <Key frame="333" value="1.57965" />
                                        <Key frame="343" value="2.01911" />
                                        <Key frame="351" value="1.22808" />
                                        <Key frame="370" value="24.7831" />
                                        <Key frame="383" value="2.01911" />
                                        <Key frame="395" value="24.7831" />
                                        <Key frame="408" value="2.01911" />
                                        <Key frame="420" value="24.7831" />
                                        <Key frame="433" value="2.01911" />
                                        <Key frame="445" value="29.0898" />
                                        <Key frame="458" value="27.5956" />
                                        <Key frame="470" value="29.705" />
                                        <Key frame="483" value="26.453" />
                                        <Key frame="495" value="41.2188" />
                                        <Key frame="508" value="27.5956" />
                                        <Key frame="520" value="0.617646" />
                                        <Key frame="533" value="0.969213" />
                                        <Key frame="545" value="0.441863" />
                                        <Key frame="570" value="3.68905" />
                                        <Key frame="582" value="5.88634" />
                                        <Key frame="595" value="5.18321" />
                                        <Key frame="607" value="5.18321" />
                                        <Key frame="620" value="5.18321" />
                                        <Key frame="633" value="5.18321" />
                                        <Key frame="645" value="5.2711" />
                                        <Key frame="658" value="5.18321" />
                                        <Key frame="670" value="5.18321" />
                                        <Key frame="683" value="5.35899" />
                                        <Key frame="695" value="23.4647" />
                                        <Key frame="720" value="2.98591" />
                                        <Key frame="733" value="31.6386" />
                                        <Key frame="745" value="41.9219" />
                                        <Key frame="758" value="4.39218" />
                                        <Key frame="770" value="4.39218" />
                                        <Key frame="792" value="55.9846" />
                                        <Key frame="804" value="38.3184" />
                                        <Key frame="820" value="82.0006" />
                                        <Key frame="833" value="78.4849" />
                                        <Key frame="845" value="11.863" />
                                        <Key frame="858" value="1.22808" />
                                        <Key frame="883" value="49.4806" />
                                        <Key frame="908" value="1.22808" />
                                        <Key frame="933" value="49.4806" />
                                        <Key frame="945" value="20.5643" />
                                        <Key frame="958" value="37.7031" />
                                        <Key frame="970" value="10.7204" />
                                        <Key frame="983" value="47.6349" />
                                        <Key frame="995" value="43.0645" />
                                        <Key frame="1008" value="35.3301" />
                                        <Key frame="1020" value="1.93121" />
                                        <Key frame="1033" value="35.1543" />
                                        <Key frame="1045" value="30.7597" />
                                        <Key frame="1135" value="31.4628" />
                                        <Key frame="1166" value="21.9705" />
                                        <Key frame="1207" value="25.1346" />
                                        <Key frame="1256" value="25.1346" />
                                        <Key frame="1283" value="22.41" />
                                        <Key frame="1308" value="11.4235" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="36" value="-64.8665" />
                                        <Key frame="78" value="-64.8665" />
                                        <Key frame="91" value="-65.2181" />
                                        <Key frame="112" value="-67.8548" />
                                        <Key frame="131" value="-69.5248" />
                                        <Key frame="151" value="-55.2863" />
                                        <Key frame="170" value="-38.2353" />
                                        <Key frame="176" value="-74.0951" />
                                        <Key frame="183" value="-120" />
                                        <Key frame="195" value="-119.623" />
                                        <Key frame="208" value="-42.6299" />
                                        <Key frame="220" value="-117.514" />
                                        <Key frame="232" value="-1.40867" />
                                        <Key frame="245" value="-27.6883" />
                                        <Key frame="258" value="-27.6004" />
                                        <Key frame="270" value="-27.6883" />
                                        <Key frame="283" value="-27.6004" />
                                        <Key frame="295" value="-22.1511" />
                                        <Key frame="308" value="3.77694" />
                                        <Key frame="320" value="-1.67235" />
                                        <Key frame="333" value="-11.2525" />
                                        <Key frame="343" value="-11.5162" />
                                        <Key frame="351" value="-31.204" />
                                        <Key frame="370" value="-24.0847" />
                                        <Key frame="383" value="-21.448" />
                                        <Key frame="395" value="-24.0847" />
                                        <Key frame="408" value="-21.448" />
                                        <Key frame="420" value="-24.0847" />
                                        <Key frame="433" value="-21.448" />
                                        <Key frame="445" value="-46.9366" />
                                        <Key frame="458" value="-95.277" />
                                        <Key frame="470" value="-52.6495" />
                                        <Key frame="483" value="4.30429" />
                                        <Key frame="495" value="-31.7313" />
                                        <Key frame="508" value="-95.277" />
                                        <Key frame="520" value="-53.9631" />
                                        <Key frame="533" value="-29.9687" />
                                        <Key frame="545" value="-119.179" />
                                        <Key frame="570" value="-114.613" />
                                        <Key frame="582" value="-86.8394" />
                                        <Key frame="595" value="-96.5954" />
                                        <Key frame="607" value="-87.2789" />
                                        <Key frame="620" value="-96.5954" />
                                        <Key frame="633" value="-87.7183" />
                                        <Key frame="645" value="-96.5954" />
                                        <Key frame="658" value="-87.3668" />
                                        <Key frame="670" value="-96.0681" />
                                        <Key frame="683" value="-86.9273" />
                                        <Key frame="695" value="-69.0853" />
                                        <Key frame="720" value="50.2717" />
                                        <Key frame="733" value="29.0898" />
                                        <Key frame="745" value="28.6503" />
                                        <Key frame="758" value="50.6232" />
                                        <Key frame="770" value="50.6232" />
                                        <Key frame="792" value="-14.8561" />
                                        <Key frame="804" value="11.863" />
                                        <Key frame="820" value="25.662" />
                                        <Key frame="833" value="-29.0067" />
                                        <Key frame="845" value="-13.2741" />
                                        <Key frame="858" value="-11.692" />
                                        <Key frame="883" value="-12.2194" />
                                        <Key frame="908" value="-11.692" />
                                        <Key frame="933" value="-12.2194" />
                                        <Key frame="945" value="-30.8524" />
                                        <Key frame="958" value="-120" />
                                        <Key frame="970" value="-23.8211" />
                                        <Key frame="983" value="-120" />
                                        <Key frame="995" value="-120" />
                                        <Key frame="1008" value="-101.078" />
                                        <Key frame="1020" value="-21.0085" />
                                        <Key frame="1033" value="-110.394" />
                                        <Key frame="1045" value="-19.3386" />
                                        <Key frame="1135" value="-19.2507" />
                                        <Key frame="1166" value="-78.4897" />
                                        <Key frame="1207" value="-115.404" />
                                        <Key frame="1256" value="-115.404" />
                                        <Key frame="1283" value="-26.1941" />
                                        <Key frame="1308" value="-63.636" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="36" value="0" />
                                        <Key frame="78" value="0" />
                                        <Key frame="91" value="-0.964405" />
                                        <Key frame="112" value="-24.3436" />
                                        <Key frame="131" value="-73.2114" />
                                        <Key frame="151" value="-59.9398" />
                                        <Key frame="170" value="-60.7308" />
                                        <Key frame="176" value="-42.6251" />
                                        <Key frame="183" value="-30.9355" />
                                        <Key frame="195" value="-19.5975" />
                                        <Key frame="208" value="-82.7037" />
                                        <Key frame="220" value="-45.8771" />
                                        <Key frame="232" value="-55.5452" />
                                        <Key frame="245" value="-36.2969" />
                                        <Key frame="258" value="-7.55628" />
                                        <Key frame="270" value="-36.2969" />
                                        <Key frame="283" value="-7.55628" />
                                        <Key frame="295" value="-60.2913" />
                                        <Key frame="308" value="-14.5876" />
                                        <Key frame="320" value="-0.349163" />
                                        <Key frame="333" value="-56.4241" />
                                        <Key frame="343" value="-55.3694" />
                                        <Key frame="351" value="-42.713" />
                                        <Key frame="370" value="0" />
                                        <Key frame="383" value="-35.0664" />
                                        <Key frame="395" value="0" />
                                        <Key frame="408" value="-35.0664" />
                                        <Key frame="420" value="0" />
                                        <Key frame="433" value="-35.0664" />
                                        <Key frame="445" value="-29.9687" />
                                        <Key frame="458" value="-60.8187" />
                                        <Key frame="470" value="-26.1014" />
                                        <Key frame="483" value="-54.5784" />
                                        <Key frame="495" value="-28.2108" />
                                        <Key frame="508" value="-60.8187" />
                                        <Key frame="520" value="-47.6397" />
                                        <Key frame="533" value="-78.4018" />
                                        <Key frame="545" value="-65.6575" />
                                        <Key frame="570" value="-27.0682" />
                                        <Key frame="582" value="-35.7695" />
                                        <Key frame="595" value="-24.3436" />
                                        <Key frame="607" value="-34.9785" />
                                        <Key frame="620" value="-24.3436" />
                                        <Key frame="633" value="-34.1875" />
                                        <Key frame="645" value="-24.3436" />
                                        <Key frame="658" value="-34.4512" />
                                        <Key frame="670" value="-24.6073" />
                                        <Key frame="683" value="-34.7148" />
                                        <Key frame="695" value="-70.8383" />
                                        <Key frame="720" value="-52.7326" />
                                        <Key frame="733" value="-11.2477" />
                                        <Key frame="745" value="-5.35899" />
                                        <Key frame="758" value="-52.3811" />
                                        <Key frame="770" value="-52.3811" />
                                        <Key frame="792" value="-51.9416" />
                                        <Key frame="804" value="-71.0141" />
                                        <Key frame="820" value="-42.5372" />
                                        <Key frame="833" value="-43.504" />
                                        <Key frame="845" value="-0.349163" />
                                        <Key frame="858" value="-40.7794" />
                                        <Key frame="883" value="-1.0523" />
                                        <Key frame="908" value="-40.7794" />
                                        <Key frame="933" value="-1.0523" />
                                        <Key frame="945" value="-34.4512" />
                                        <Key frame="958" value="-38.7578" />
                                        <Key frame="970" value="-33.5722" />
                                        <Key frame="983" value="-12.8298" />
                                        <Key frame="995" value="-15.5544" />
                                        <Key frame="1008" value="-42.1856" />
                                        <Key frame="1020" value="-59.0608" />
                                        <Key frame="1033" value="-53.26" />
                                        <Key frame="1045" value="-59.3245" />
                                        <Key frame="1135" value="-58.3577" />
                                        <Key frame="1166" value="-58.6214" />
                                        <Key frame="1207" value="0" />
                                        <Key frame="1256" value="0" />
                                        <Key frame="1283" value="-84.2858" />
                                        <Key frame="1308" value="-40.6915" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="35" value="23.8163" />
                                        <Key frame="77" value="23.8163" />
                                        <Key frame="86" value="13.9724" />
                                        <Key frame="110" value="-10.8131" />
                                        <Key frame="129" value="20.1248" />
                                        <Key frame="166" value="15.2029" />
                                        <Key frame="180" value="63.5433" />
                                        <Key frame="193" value="-32.7" />
                                        <Key frame="206" value="-45.4424" />
                                        <Key frame="218" value="-46.585" />
                                        <Key frame="230" value="-45.4424" />
                                        <Key frame="243" value="-81.7417" />
                                        <Key frame="268" value="-66.1849" />
                                        <Key frame="293" value="-104.594" />
                                        <Key frame="318" value="-53.3527" />
                                        <Key frame="343" value="-4.39699" />
                                        <Key frame="381" value="-74.7104" />
                                        <Key frame="431" value="-74.7104" />
                                        <Key frame="456" value="38.7578" />
                                        <Key frame="481" value="48.0744" />
                                        <Key frame="518" value="6.76526" />
                                        <Key frame="556" value="7.81996" />
                                        <Key frame="568" value="7.81996" />
                                        <Key frame="593" value="32.5175" />
                                        <Key frame="697" value="31.5507" />
                                        <Key frame="718" value="-13.2741" />
                                        <Key frame="756" value="-13.5377" />
                                        <Key frame="818" value="-12.9225" />
                                        <Key frame="843" value="-21.448" />
                                        <Key frame="931" value="-21.3601" />
                                        <Key frame="956" value="-31.995" />
                                        <Key frame="981" value="-38.5869" />
                                        <Key frame="1134" value="-38.2353" />
                                        <Key frame="1255" value="-38.2353" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                        <Key frame="35" value="0.674206" />
                                        <Key frame="77" value="0.674206" />
                                        <Key frame="86" value="0.674206" />
                                        <Key frame="110" value="0.258935" />
                                        <Key frame="129" value="0.258935" />
                                        <Key frame="166" value="0.258935" />
                                        <Key frame="180" value="0.256753" />
                                        <Key frame="206" value="0.613843" />
                                        <Key frame="218" value="0.613843" />
                                        <Key frame="230" value="0.613843" />
                                        <Key frame="243" value="0.614934" />
                                        <Key frame="268" value="0.613479" />
                                        <Key frame="293" value="0.613479" />
                                        <Key frame="318" value="0.257844" />
                                        <Key frame="343" value="0.257844" />
                                        <Key frame="381" value="0.796751" />
                                        <Key frame="431" value="0.796751" />
                                        <Key frame="456" value="0.295298" />
                                        <Key frame="481" value="0.295298" />
                                        <Key frame="518" value="0.296389" />
                                        <Key frame="556" value="0.295298" />
                                        <Key frame="568" value="0.295298" />
                                        <Key frame="593" value="0.237117" />
                                        <Key frame="697" value="0.24148" />
                                        <Key frame="718" value="0.574934" />
                                        <Key frame="756" value="0.577116" />
                                        <Key frame="818" value="0.577479" />
                                        <Key frame="843" value="0.577843" />
                                        <Key frame="931" value="0.577479" />
                                        <Key frame="956" value="0.577843" />
                                        <Key frame="981" value="0.577479" />
                                        <Key frame="1134" value="0.577843" />
                                        <Key frame="1255" value="0.577843" />
                                        <Key frame="1279" value="0.221818" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="36" value="22.1511" />
                                        <Key frame="78" value="22.1511" />
                                        <Key frame="91" value="29.534" />
                                        <Key frame="112" value="92.025" />
                                        <Key frame="131" value="118.92" />
                                        <Key frame="151" value="82.9722" />
                                        <Key frame="170" value="38.0595" />
                                        <Key frame="176" value="69.4369" />
                                        <Key frame="183" value="54.5832" />
                                        <Key frame="195" value="96.5954" />
                                        <Key frame="208" value="102.396" />
                                        <Key frame="220" value="86.4879" />
                                        <Key frame="232" value="55.1105" />
                                        <Key frame="245" value="67.5033" />
                                        <Key frame="258" value="74.0951" />
                                        <Key frame="270" value="67.5033" />
                                        <Key frame="283" value="74.0951" />
                                        <Key frame="295" value="41.2236" />
                                        <Key frame="308" value="109.955" />
                                        <Key frame="320" value="119.359" />
                                        <Key frame="333" value="119.623" />
                                        <Key frame="343" value="85.0816" />
                                        <Key frame="351" value="71.1947" />
                                        <Key frame="370" value="-64.1586" />
                                        <Key frame="383" value="-53.0842" />
                                        <Key frame="395" value="-64.1586" />
                                        <Key frame="408" value="-53.0842" />
                                        <Key frame="420" value="-64.1586" />
                                        <Key frame="433" value="-53.0842" />
                                        <Key frame="445" value="-23.201" />
                                        <Key frame="458" value="80.7749" />
                                        <Key frame="470" value="80.2476" />
                                        <Key frame="483" value="40.3447" />
                                        <Key frame="495" value="46.3213" />
                                        <Key frame="508" value="80.7749" />
                                        <Key frame="520" value="117.86" />
                                        <Key frame="533" value="120" />
                                        <Key frame="545" value="99.4031" />
                                        <Key frame="570" value="77.0835" />
                                        <Key frame="582" value="108.197" />
                                        <Key frame="595" value="77.6987" />
                                        <Key frame="607" value="83.3238" />
                                        <Key frame="620" value="79.3686" />
                                        <Key frame="633" value="83.0601" />
                                        <Key frame="645" value="80.2476" />
                                        <Key frame="658" value="83.4995" />
                                        <Key frame="670" value="81.3023" />
                                        <Key frame="683" value="84.2027" />
                                        <Key frame="695" value="66.9759" />
                                        <Key frame="720" value="14.153" />
                                        <Key frame="733" value="14.5924" />
                                        <Key frame="745" value="15.6471" />
                                        <Key frame="758" value="10.2857" />
                                        <Key frame="770" value="10.2857" />
                                        <Key frame="792" value="41.751" />
                                        <Key frame="804" value="52.0343" />
                                        <Key frame="820" value="12.1315" />
                                        <Key frame="833" value="16.6139" />
                                        <Key frame="845" value="54.3195" />
                                        <Key frame="858" value="63.8118" />
                                        <Key frame="883" value="47.2003" />
                                        <Key frame="908" value="63.8118" />
                                        <Key frame="933" value="47.2003" />
                                        <Key frame="945" value="56.6047" />
                                        <Key frame="958" value="8.87947" />
                                        <Key frame="970" value="-68.641" />
                                        <Key frame="983" value="-29.0898" />
                                        <Key frame="995" value="-29.0019" />
                                        <Key frame="1008" value="-20.74" />
                                        <Key frame="1020" value="19.2507" />
                                        <Key frame="1033" value="20.9206" />
                                        <Key frame="1045" value="-83.0553" />
                                        <Key frame="1135" value="-82.44" />
                                        <Key frame="1166" value="37.1806" />
                                        <Key frame="1207" value="53.6164" />
                                        <Key frame="1256" value="53.6164" />
                                        <Key frame="1283" value="68.1185" />
                                        <Key frame="1308" value="96.2438" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="36" value="-0.881321" />
                                        <Key frame="78" value="-0.881321" />
                                        <Key frame="91" value="-0.969213" />
                                        <Key frame="112" value="-2.28759" />
                                        <Key frame="131" value="-0.266079" />
                                        <Key frame="151" value="-0.529755" />
                                        <Key frame="170" value="-0.441863" />
                                        <Key frame="176" value="-4.57277" />
                                        <Key frame="183" value="-5.10012" />
                                        <Key frame="195" value="-1.67235" />
                                        <Key frame="208" value="-40.6963" />
                                        <Key frame="220" value="-21.8874" />
                                        <Key frame="232" value="-0.617646" />
                                        <Key frame="245" value="-93.4313" />
                                        <Key frame="258" value="-90.2672" />
                                        <Key frame="270" value="-93.4313" />
                                        <Key frame="283" value="-90.2672" />
                                        <Key frame="295" value="-0.178188" />
                                        <Key frame="308" value="-33.3134" />
                                        <Key frame="320" value="-48.6065" />
                                        <Key frame="333" value="-68.4701" />
                                        <Key frame="343" value="-24.8758" />
                                        <Key frame="351" value="-0.266079" />
                                        <Key frame="370" value="-26.0184" />
                                        <Key frame="383" value="-1.40867" />
                                        <Key frame="395" value="-26.0184" />
                                        <Key frame="408" value="-1.40867" />
                                        <Key frame="420" value="-26.0184" />
                                        <Key frame="433" value="-1.40867" />
                                        <Key frame="445" value="-34.6317" />
                                        <Key frame="458" value="-23.03" />
                                        <Key frame="470" value="-0.617646" />
                                        <Key frame="483" value="-0.969213" />
                                        <Key frame="495" value="-0.441863" />
                                        <Key frame="508" value="-23.03" />
                                        <Key frame="520" value="-29.705" />
                                        <Key frame="533" value="-26.453" />
                                        <Key frame="545" value="-41.2188" />
                                        <Key frame="570" value="-6.4185" />
                                        <Key frame="582" value="-5.97904" />
                                        <Key frame="595" value="-32.6981" />
                                        <Key frame="607" value="-4.04542" />
                                        <Key frame="620" value="-31.8192" />
                                        <Key frame="633" value="-4.39699" />
                                        <Key frame="645" value="-31.1161" />
                                        <Key frame="658" value="-4.22121" />
                                        <Key frame="670" value="-30.1493" />
                                        <Key frame="683" value="-3.86964" />
                                        <Key frame="695" value="-36.829" />
                                        <Key frame="720" value="-50.8038" />
                                        <Key frame="733" value="-35.0712" />
                                        <Key frame="745" value="-27.952" />
                                        <Key frame="758" value="-57.8352" />
                                        <Key frame="770" value="-57.8352" />
                                        <Key frame="792" value="-0.529755" />
                                        <Key frame="804" value="-17.405" />
                                        <Key frame="820" value="-2.72705" />
                                        <Key frame="833" value="-2.81494" />
                                        <Key frame="845" value="-3.07861" />
                                        <Key frame="858" value="-38.9384" />
                                        <Key frame="883" value="-1.145" />
                                        <Key frame="908" value="-38.9384" />
                                        <Key frame="933" value="-1.145" />
                                        <Key frame="945" value="-13.8893" />
                                        <Key frame="958" value="-22.9421" />
                                        <Key frame="970" value="-31.204" />
                                        <Key frame="983" value="-16.3503" />
                                        <Key frame="995" value="-10.3736" />
                                        <Key frame="1008" value="-55.7258" />
                                        <Key frame="1020" value="-71.5463" />
                                        <Key frame="1033" value="-48.5186" />
                                        <Key frame="1045" value="-27.4246" />
                                        <Key frame="1135" value="-27.5125" />
                                        <Key frame="1166" value="-1.58446" />
                                        <Key frame="1207" value="-0.529755" />
                                        <Key frame="1256" value="-0.529755" />
                                        <Key frame="1283" value="-19.0749" />
                                        <Key frame="1308" value="-12.9225" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="36" value="37.9668" />
                                        <Key frame="78" value="37.9668" />
                                        <Key frame="91" value="82.5279" />
                                        <Key frame="112" value="119.794" />
                                        <Key frame="131" value="114.169" />
                                        <Key frame="151" value="50.008" />
                                        <Key frame="170" value="32.6054" />
                                        <Key frame="176" value="79.188" />
                                        <Key frame="183" value="119.794" />
                                        <Key frame="195" value="119.618" />
                                        <Key frame="208" value="44.9982" />
                                        <Key frame="220" value="119.706" />
                                        <Key frame="232" value="-15.6471" />
                                        <Key frame="245" value="29.6171" />
                                        <Key frame="258" value="74.7934" />
                                        <Key frame="270" value="29.6171" />
                                        <Key frame="283" value="74.7934" />
                                        <Key frame="295" value="31.8144" />
                                        <Key frame="308" value="67.6742" />
                                        <Key frame="320" value="55.1936" />
                                        <Key frame="333" value="54.7541" />
                                        <Key frame="343" value="75.8482" />
                                        <Key frame="351" value="34.0117" />
                                        <Key frame="370" value="13.3571" />
                                        <Key frame="383" value="9.75358" />
                                        <Key frame="395" value="13.3571" />
                                        <Key frame="408" value="9.75358" />
                                        <Key frame="420" value="13.3571" />
                                        <Key frame="433" value="9.75358" />
                                        <Key frame="445" value="56.4241" />
                                        <Key frame="458" value="119.179" />
                                        <Key frame="470" value="53.9631" />
                                        <Key frame="483" value="29.9687" />
                                        <Key frame="495" value="119.179" />
                                        <Key frame="508" value="119.179" />
                                        <Key frame="520" value="52.6495" />
                                        <Key frame="533" value="-4.30429" />
                                        <Key frame="545" value="31.7313" />
                                        <Key frame="570" value="54.1389" />
                                        <Key frame="582" value="119.267" />
                                        <Key frame="595" value="43.4161" />
                                        <Key frame="607" value="120" />
                                        <Key frame="620" value="43.3282" />
                                        <Key frame="633" value="119.091" />
                                        <Key frame="645" value="42.6251" />
                                        <Key frame="658" value="118.739" />
                                        <Key frame="670" value="42.4493" />
                                        <Key frame="683" value="119.003" />
                                        <Key frame="695" value="25.8378" />
                                        <Key frame="720" value="-17.5807" />
                                        <Key frame="733" value="-23.2058" />
                                        <Key frame="745" value="-13.4498" />
                                        <Key frame="758" value="-17.5807" />
                                        <Key frame="770" value="-17.5807" />
                                        <Key frame="792" value="-12.483" />
                                        <Key frame="804" value="16.1697" />
                                        <Key frame="820" value="-12.3072" />
                                        <Key frame="833" value="36.0332" />
                                        <Key frame="845" value="20.3006" />
                                        <Key frame="858" value="35.2422" />
                                        <Key frame="883" value="21.1795" />
                                        <Key frame="908" value="35.2422" />
                                        <Key frame="933" value="21.1795" />
                                        <Key frame="945" value="32.957" />
                                        <Key frame="958" value="119.97" />
                                        <Key frame="970" value="47.2833" />
                                        <Key frame="983" value="19.158" />
                                        <Key frame="995" value="-3.16651" />
                                        <Key frame="1008" value="-60.1203" />
                                        <Key frame="1020" value="75.145" />
                                        <Key frame="1033" value="45.4376" />
                                        <Key frame="1045" value="-6.85796" />
                                        <Key frame="1135" value="-6.33061" />
                                        <Key frame="1166" value="66.0043" />
                                        <Key frame="1207" value="6.85315" />
                                        <Key frame="1256" value="6.85315" />
                                        <Key frame="1283" value="20.4764" />
                                        <Key frame="1308" value="68.1137" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="36" value="89.1246" />
                                        <Key frame="78" value="89.1246" />
                                        <Key frame="91" value="88.2457" />
                                        <Key frame="112" value="25.7547" />
                                        <Key frame="131" value="58.6262" />
                                        <Key frame="151" value="61.5266" />
                                        <Key frame="170" value="88.9488" />
                                        <Key frame="176" value="62.845" />
                                        <Key frame="183" value="83.939" />
                                        <Key frame="195" value="25.5789" />
                                        <Key frame="208" value="71.4584" />
                                        <Key frame="220" value="38.5869" />
                                        <Key frame="232" value="47.7276" />
                                        <Key frame="245" value="22.8543" />
                                        <Key frame="258" value="37.708" />
                                        <Key frame="270" value="22.8543" />
                                        <Key frame="283" value="37.708" />
                                        <Key frame="295" value="67.2396" />
                                        <Key frame="308" value="29.8856" />
                                        <Key frame="320" value="43.0693" />
                                        <Key frame="333" value="1.32078" />
                                        <Key frame="343" value="36.4775" />
                                        <Key frame="351" value="64.0755" />
                                        <Key frame="370" value="0.00240423" />
                                        <Key frame="383" value="37.6201" />
                                        <Key frame="395" value="0.00240423" />
                                        <Key frame="408" value="37.6201" />
                                        <Key frame="420" value="0.00240423" />
                                        <Key frame="433" value="37.6201" />
                                        <Key frame="445" value="34.2802" />
                                        <Key frame="458" value="56.1652" />
                                        <Key frame="470" value="47.6397" />
                                        <Key frame="483" value="78.4018" />
                                        <Key frame="495" value="65.6575" />
                                        <Key frame="508" value="56.1652" />
                                        <Key frame="520" value="26.1014" />
                                        <Key frame="533" value="54.5784" />
                                        <Key frame="545" value="28.2108" />
                                        <Key frame="570" value="87.6305" />
                                        <Key frame="582" value="51.1554" />
                                        <Key frame="595" value="85.1695" />
                                        <Key frame="607" value="56.9562" />
                                        <Key frame="620" value="85.3453" />
                                        <Key frame="633" value="56.9562" />
                                        <Key frame="645" value="85.3453" />
                                        <Key frame="658" value="56.2531" />
                                        <Key frame="670" value="84.2027" />
                                        <Key frame="683" value="55.3742" />
                                        <Key frame="695" value="88.8609" />
                                        <Key frame="720" value="43.8604" />
                                        <Key frame="733" value="89.1246" />
                                        <Key frame="745" value="89.5641" />
                                        <Key frame="758" value="39.6416" />
                                        <Key frame="770" value="39.6416" />
                                        <Key frame="792" value="28.8309" />
                                        <Key frame="804" value="33.4013" />
                                        <Key frame="820" value="53.0011" />
                                        <Key frame="833" value="72.6889" />
                                        <Key frame="845" value="29.0067" />
                                        <Key frame="858" value="1.145" />
                                        <Key frame="883" value="36.038" />
                                        <Key frame="908" value="1.145" />
                                        <Key frame="933" value="36.038" />
                                        <Key frame="945" value="24.7879" />
                                        <Key frame="958" value="41.1357" />
                                        <Key frame="970" value="15.2077" />
                                        <Key frame="983" value="67.4154" />
                                        <Key frame="995" value="76.2924" />
                                        <Key frame="1008" value="82.5327" />
                                        <Key frame="1020" value="25.4031" />
                                        <Key frame="1033" value="77.5229" />
                                        <Key frame="1045" value="47.2003" />
                                        <Key frame="1135" value="48.1671" />
                                        <Key frame="1166" value="67.8548" />
                                        <Key frame="1207" value="65.1302" />
                                        <Key frame="1256" value="65.1302" />
                                        <Key frame="1283" value="74.2709" />
                                        <Key frame="1308" value="39.3779" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                        <Key frame="35" value="21.3553" />
                                        <Key frame="77" value="21.3553" />
                                        <Key frame="86" value="-5.45169" />
                                        <Key frame="110" value="10.3688" />
                                        <Key frame="129" value="42.8888" />
                                        <Key frame="166" value="49.0412" />
                                        <Key frame="180" value="59.2366" />
                                        <Key frame="206" value="47.3712" />
                                        <Key frame="218" value="48.6896" />
                                        <Key frame="230" value="47.3712" />
                                        <Key frame="243" value="62.6644" />
                                        <Key frame="268" value="15.6423" />
                                        <Key frame="293" value="82.0885" />
                                        <Key frame="318" value="70.8383" />
                                        <Key frame="343" value="92.7234" />
                                        <Key frame="381" value="75.145" />
                                        <Key frame="431" value="75.145" />
                                        <Key frame="456" value="-24.1726" />
                                        <Key frame="481" value="34.6269" />
                                        <Key frame="518" value="-21.0085" />
                                        <Key frame="556" value="-21.0085" />
                                        <Key frame="568" value="-21.0085" />
                                        <Key frame="593" value="60.1155" />
                                        <Key frame="697" value="60.1155" />
                                        <Key frame="718" value="41.9219" />
                                        <Key frame="756" value="41.9219" />
                                        <Key frame="818" value="42.0098" />
                                        <Key frame="843" value="-2.37548" />
                                        <Key frame="931" value="-2.55126" />
                                        <Key frame="956" value="24.6073" />
                                        <Key frame="981" value="56.4241" />
                                        <Key frame="1134" value="56.6878" />
                                        <Key frame="1255" value="56.6878" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                        <Key frame="35" value="0.178571" />
                                        <Key frame="77" value="0.178571" />
                                        <Key frame="86" value="0.537479" />
                                        <Key frame="110" value="0.381116" />
                                        <Key frame="129" value="0.382207" />
                                        <Key frame="166" value="0.382207" />
                                        <Key frame="180" value="0.382207" />
                                        <Key frame="206" value="0.585115" />
                                        <Key frame="218" value="0.585115" />
                                        <Key frame="230" value="0.585115" />
                                        <Key frame="243" value="0.587661" />
                                        <Key frame="268" value="0.588025" />
                                        <Key frame="293" value="0.587661" />
                                        <Key frame="318" value="0.249844" />
                                        <Key frame="343" value="0.249844" />
                                        <Key frame="381" value="0.849115" />
                                        <Key frame="431" value="0.849115" />
                                        <Key frame="456" value="0.340389" />
                                        <Key frame="481" value="0.340389" />
                                        <Key frame="518" value="0.340753" />
                                        <Key frame="556" value="0.340389" />
                                        <Key frame="568" value="0.340389" />
                                        <Key frame="593" value="0.247273" />
                                        <Key frame="606" value="0.630909" />
                                        <Key frame="619" value="0.370909" />
                                        <Key frame="638" value="0.723636" />
                                        <Key frame="657" value="0.469091" />
                                        <Key frame="675" value="0.749091" />
                                        <Key frame="697" value="0.469091" />
                                        <Key frame="718" value="0.808388" />
                                        <Key frame="756" value="0.810933" />
                                        <Key frame="818" value="0.81166" />
                                        <Key frame="843" value="0.81166" />
                                        <Key frame="931" value="0.811297" />
                                        <Key frame="956" value="0.811297" />
                                        <Key frame="981" value="0.814206" />
                                        <Key frame="1134" value="0.81166" />
                                        <Key frame="1255" value="0.81166" />
                                        <Key frame="1279" value="0.287273" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="-33.0449" />
                                        <Key frame="76" value="-33.0449" />
                                        <Key frame="90" value="-33.0449" />
                                        <Key frame="101" value="-33.0449" />
                                        <Key frame="128" value="-23.201" />
                                        <Key frame="136" value="-23.201" />
                                        <Key frame="167" value="-26.1014" />
                                        <Key frame="196" value="-16.6091" />
                                        <Key frame="221" value="-16.6091" />
                                        <Key frame="246" value="-31.0234" />
                                        <Key frame="259" value="-55" />
                                        <Key frame="271" value="-31.0234" />
                                        <Key frame="284" value="-55" />
                                        <Key frame="306" value="-28.4745" />
                                        <Key frame="326" value="-28.2987" />
                                        <Key frame="346" value="-23.201" />
                                        <Key frame="371" value="-20.6522" />
                                        <Key frame="396" value="-22.0584" />
                                        <Key frame="434" value="-22.0584" />
                                        <Key frame="446" value="-27.6835" />
                                        <Key frame="459" value="-22.41" />
                                        <Key frame="471" value="-19.5096" />
                                        <Key frame="484" value="-17.4002" />
                                        <Key frame="496" value="-20.3006" />
                                        <Key frame="509" value="-27.6835" />
                                        <Key frame="521" value="-22.41" />
                                        <Key frame="534" value="-19.5096" />
                                        <Key frame="546" value="-17.4002" />
                                        <Key frame="571" value="-22.0584" />
                                        <Key frame="608" value="-23.0252" />
                                        <Key frame="659" value="-22.0584" />
                                        <Key frame="684" value="-22.0584" />
                                        <Key frame="696" value="-20.5643" />
                                        <Key frame="721" value="-36.0332" />
                                        <Key frame="738" value="-36.0332" />
                                        <Key frame="759" value="-33.3965" />
                                        <Key frame="768" value="-33.3965" />
                                        <Key frame="786" value="-20.5643" />
                                        <Key frame="805" value="-38.67" />
                                        <Key frame="821" value="-33.3965" />
                                        <Key frame="834" value="-25.3983" />
                                        <Key frame="859" value="-28.6503" />
                                        <Key frame="884" value="-29.0019" />
                                        <Key frame="909" value="-29.0019" />
                                        <Key frame="934" value="-29.0019" />
                                        <Key frame="959" value="-18.8943" />
                                        <Key frame="971" value="-18.8943" />
                                        <Key frame="996" value="-28.0351" />
                                        <Key frame="1021" value="-15.906" />
                                        <Key frame="1046" value="-20.3006" />
                                        <Key frame="1137" value="-20.74" />
                                        <Key frame="1169" value="-14.4997" />
                                        <Key frame="1210" value="-22.8494" />
                                        <Key frame="1257" value="-22.8494" />
                                        <Key frame="1300" value="-26.9804" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="3.49538" />
                                        <Key frame="76" value="3.49538" />
                                        <Key frame="90" value="3.49538" />
                                        <Key frame="101" value="-8.45789" />
                                        <Key frame="128" value="-10.831" />
                                        <Key frame="136" value="-10.831" />
                                        <Key frame="167" value="-7.3153" />
                                        <Key frame="196" value="7.71419" />
                                        <Key frame="221" value="7.71419" />
                                        <Key frame="246" value="0.858632" />
                                        <Key frame="259" value="4.98954" />
                                        <Key frame="271" value="0.858632" />
                                        <Key frame="284" value="4.98954" />
                                        <Key frame="306" value="4.19852" />
                                        <Key frame="326" value="0.858632" />
                                        <Key frame="346" value="-4.67855" />
                                        <Key frame="371" value="5.16533" />
                                        <Key frame="396" value="3.84695" />
                                        <Key frame="434" value="3.84695" />
                                        <Key frame="446" value="-3.18439" />
                                        <Key frame="459" value="22.48" />
                                        <Key frame="471" value="12.9877" />
                                        <Key frame="484" value="9.29624" />
                                        <Key frame="496" value="4.98954" />
                                        <Key frame="509" value="-2.84322" />
                                        <Key frame="521" value="-24.0251" />
                                        <Key frame="534" value="-19.8063" />
                                        <Key frame="546" value="-14.6207" />
                                        <Key frame="571" value="4.89125" />
                                        <Key frame="608" value="16.9428" />
                                        <Key frame="659" value="0.858632" />
                                        <Key frame="684" value="0.858632" />
                                        <Key frame="696" value="22.3042" />
                                        <Key frame="721" value="43.2224" />
                                        <Key frame="738" value="43.2224" />
                                        <Key frame="759" value="36.1911" />
                                        <Key frame="768" value="36.1911" />
                                        <Key frame="786" value="-20.5973" />
                                        <Key frame="805" value="-22.7842" />
                                        <Key frame="821" value="-11.1929" />
                                        <Key frame="834" value="-4.41487" />
                                        <Key frame="859" value="-7.49108" />
                                        <Key frame="884" value="0.682848" />
                                        <Key frame="909" value="-10.6656" />
                                        <Key frame="934" value="0.682848" />
                                        <Key frame="959" value="2.00122" />
                                        <Key frame="971" value="2.00122" />
                                        <Key frame="996" value="-10.3036" />
                                        <Key frame="1021" value="12.1967" />
                                        <Key frame="1046" value="30.7418" />
                                        <Key frame="1137" value="31.5328" />
                                        <Key frame="1169" value="7.71419" />
                                        <Key frame="1210" value="-5.11801" />
                                        <Key frame="1257" value="-5.11801" />
                                        <Key frame="1300" value="7.62629" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="-7.2934" />
                                        <Key frame="76" value="-7.2934" />
                                        <Key frame="90" value="-7.2934" />
                                        <Key frame="101" value="-5.27189" />
                                        <Key frame="128" value="28.4785" />
                                        <Key frame="136" value="28.4785" />
                                        <Key frame="167" value="19.6894" />
                                        <Key frame="196" value="15.7342" />
                                        <Key frame="221" value="15.7342" />
                                        <Key frame="246" value="20.0409" />
                                        <Key frame="259" value="23.2929" />
                                        <Key frame="271" value="20.0409" />
                                        <Key frame="284" value="23.2929" />
                                        <Key frame="306" value="0.704748" />
                                        <Key frame="326" value="11.076" />
                                        <Key frame="346" value="0.528965" />
                                        <Key frame="371" value="19.5136" />
                                        <Key frame="396" value="14.7674" />
                                        <Key frame="434" value="14.7674" />
                                        <Key frame="446" value="-7.64497" />
                                        <Key frame="459" value="-9.66648" />
                                        <Key frame="471" value="-18.8951" />
                                        <Key frame="484" value="3.25361" />
                                        <Key frame="496" value="15.0311" />
                                        <Key frame="509" value="-10.6494" />
                                        <Key frame="521" value="6.13791" />
                                        <Key frame="534" value="-8.01265" />
                                        <Key frame="546" value="10.7083" />
                                        <Key frame="571" value="15.4544" />
                                        <Key frame="608" value="19.162" />
                                        <Key frame="659" value="22.8535" />
                                        <Key frame="684" value="22.8535" />
                                        <Key frame="696" value="-1.14098" />
                                        <Key frame="721" value="-20.7408" />
                                        <Key frame="738" value="-20.7408" />
                                        <Key frame="759" value="7.99976" />
                                        <Key frame="768" value="7.99976" />
                                        <Key frame="786" value="17.1244" />
                                        <Key frame="805" value="9.31814" />
                                        <Key frame="821" value="16.597" />
                                        <Key frame="834" value="22.7656" />
                                        <Key frame="859" value="-22.1471" />
                                        <Key frame="884" value="-22.9381" />
                                        <Key frame="909" value="-20.3175" />
                                        <Key frame="934" value="-22.9381" />
                                        <Key frame="959" value="17.58" />
                                        <Key frame="971" value="17.58" />
                                        <Key frame="996" value="24.3476" />
                                        <Key frame="1021" value="28.4785" />
                                        <Key frame="1046" value="12.8338" />
                                        <Key frame="1137" value="13.1854" />
                                        <Key frame="1169" value="11.5154" />
                                        <Key frame="1210" value="-21.9713" />
                                        <Key frame="1257" value="-21.9713" />
                                        <Key frame="1300" value="15.2948" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="12.1806" />
                                        <Key frame="76" value="12.1806" />
                                        <Key frame="90" value="12.1806" />
                                        <Key frame="101" value="24.6612" />
                                        <Key frame="128" value="1.01835" />
                                        <Key frame="136" value="1.01835" />
                                        <Key frame="167" value="0.666784" />
                                        <Key frame="196" value="1.98516" />
                                        <Key frame="221" value="1.98516" />
                                        <Key frame="246" value="39.6907" />
                                        <Key frame="259" value="38.7239" />
                                        <Key frame="271" value="39.6907" />
                                        <Key frame="284" value="38.7239" />
                                        <Key frame="306" value="19.8272" />
                                        <Key frame="326" value="58.5874" />
                                        <Key frame="346" value="55.3354" />
                                        <Key frame="371" value="4.09456" />
                                        <Key frame="396" value="23.255" />
                                        <Key frame="434" value="23.255" />
                                        <Key frame="446" value="38.4602" />
                                        <Key frame="459" value="65.5309" />
                                        <Key frame="471" value="76.4" />
                                        <Key frame="484" value="28.5" />
                                        <Key frame="496" value="28.3527" />
                                        <Key frame="509" value="40.0852" />
                                        <Key frame="521" value="30.9444" />
                                        <Key frame="534" value="57.8393" />
                                        <Key frame="546" value="15.3876" />
                                        <Key frame="571" value="22.2432" />
                                        <Key frame="608" value="1.72149" />
                                        <Key frame="659" value="6.29186" />
                                        <Key frame="684" value="6.29186" />
                                        <Key frame="696" value="41.8001" />
                                        <Key frame="721" value="90.8437" />
                                        <Key frame="738" value="90.8437" />
                                        <Key frame="759" value="23.4307" />
                                        <Key frame="768" value="23.4307" />
                                        <Key frame="786" value="1.6765" />
                                        <Key frame="805" value="48.6557" />
                                        <Key frame="821" value="10.3778" />
                                        <Key frame="834" value="0.842568" />
                                        <Key frame="859" value="2.42462" />
                                        <Key frame="884" value="3.39143" />
                                        <Key frame="909" value="3.08277" />
                                        <Key frame="934" value="3.39143" />
                                        <Key frame="959" value="1.80938" />
                                        <Key frame="971" value="1.80938" />
                                        <Key frame="996" value="10.5107" />
                                        <Key frame="1021" value="28.2648" />
                                        <Key frame="1046" value="43.9095" />
                                        <Key frame="1137" value="42.3275" />
                                        <Key frame="1169" value="0.754676" />
                                        <Key frame="1210" value="1.5457" />
                                        <Key frame="1257" value="1.5457" />
                                        <Key frame="1300" value="6.55553" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="3.57192" />
                                        <Key frame="76" value="3.57192" />
                                        <Key frame="90" value="3.57192" />
                                        <Key frame="101" value="-1.78948" />
                                        <Key frame="128" value="-5.04147" />
                                        <Key frame="136" value="-5.04147" />
                                        <Key frame="167" value="-1.61369" />
                                        <Key frame="196" value="-0.910561" />
                                        <Key frame="221" value="-0.910561" />
                                        <Key frame="246" value="-28.3" />
                                        <Key frame="259" value="-24.6413" />
                                        <Key frame="271" value="-28.3" />
                                        <Key frame="284" value="-24" />
                                        <Key frame="306" value="1.2" />
                                        <Key frame="326" value="-43.9775" />
                                        <Key frame="346" value="-32.6" />
                                        <Key frame="371" value="-5.21726" />
                                        <Key frame="396" value="-17.0826" />
                                        <Key frame="434" value="-17.0826" />
                                        <Key frame="446" value="-16.8" />
                                        <Key frame="459" value="-39.1" />
                                        <Key frame="471" value="-44.8" />
                                        <Key frame="484" value="-20.5104" />
                                        <Key frame="496" value="-24.3777" />
                                        <Key frame="509" value="-14.7" />
                                        <Key frame="521" value="-16.1" />
                                        <Key frame="534" value="-29.7" />
                                        <Key frame="546" value="-9.6" />
                                        <Key frame="571" value="-16.7308" />
                                        <Key frame="608" value="-0.646885" />
                                        <Key frame="659" value="-6.97509" />
                                        <Key frame="684" value="-6.97509" />
                                        <Key frame="696" value="-28.0691" />
                                        <Key frame="721" value="-50.3936" />
                                        <Key frame="738" value="-50.3936" />
                                        <Key frame="759" value="-10.1392" />
                                        <Key frame="768" value="-10.1392" />
                                        <Key frame="786" value="-0.207106" />
                                        <Key frame="805" value="-17.6979" />
                                        <Key frame="821" value="0.583919" />
                                        <Key frame="834" value="3.48403" />
                                        <Key frame="859" value="12.5369" />
                                        <Key frame="884" value="9.28488" />
                                        <Key frame="909" value="11.9" />
                                        <Key frame="934" value="9.28488" />
                                        <Key frame="959" value="-4.6" />
                                        <Key frame="971" value="-8.9" />
                                        <Key frame="996" value="-7.5" />
                                        <Key frame="1021" value="-31.4969" />
                                        <Key frame="1046" value="-34.1" />
                                        <Key frame="1137" value="-36.8583" />
                                        <Key frame="1169" value="3.7477" />
                                        <Key frame="1210" value="12.8884" />
                                        <Key frame="1257" value="12.8884" />
                                        <Key frame="1300" value="-2.40472" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="-8.7" />
                                        <Key frame="76" value="-8.7" />
                                        <Key frame="90" value="-3.46919" />
                                        <Key frame="101" value="7.51728" />
                                        <Key frame="128" value="8.65987" />
                                        <Key frame="136" value="8.65987" />
                                        <Key frame="167" value="8.83565" />
                                        <Key frame="196" value="-5.57859" />
                                        <Key frame="221" value="-5.57859" />
                                        <Key frame="246" value="4.17739" />
                                        <Key frame="259" value="8.22041" />
                                        <Key frame="271" value="4.17739" />
                                        <Key frame="284" value="8.22041" />
                                        <Key frame="306" value="-2.50238" />
                                        <Key frame="326" value="7.95673" />
                                        <Key frame="346" value="5.75944" />
                                        <Key frame="371" value="-1.88714" />
                                        <Key frame="396" value="1.10118" />
                                        <Key frame="434" value="1.10118" />
                                        <Key frame="446" value="3.82582" />
                                        <Key frame="459" value="-7.9" />
                                        <Key frame="471" value="-3.2" />
                                        <Key frame="484" value="-9.5" />
                                        <Key frame="496" value="-1.53557" />
                                        <Key frame="509" value="1.6" />
                                        <Key frame="521" value="3.2" />
                                        <Key frame="534" value="10.3" />
                                        <Key frame="546" value="12.6" />
                                        <Key frame="571" value="1.30509" />
                                        <Key frame="608" value="-11.1" />
                                        <Key frame="659" value="2.77112" />
                                        <Key frame="684" value="2.77112" />
                                        <Key frame="696" value="-11.1158" />
                                        <Key frame="721" value="-5.5" />
                                        <Key frame="738" value="-5.66648" />
                                        <Key frame="759" value="-22.9" />
                                        <Key frame="768" value="-18.8502" />
                                        <Key frame="786" value="12.9068" />
                                        <Key frame="805" value="-0.8" />
                                        <Key frame="821" value="7.98486" />
                                        <Key frame="834" value="3.56215" />
                                        <Key frame="859" value="1.89221" />
                                        <Key frame="884" value="-5.31492" />
                                        <Key frame="909" value="0.250391" />
                                        <Key frame="934" value="-5.31492" />
                                        <Key frame="959" value="-0.305087" />
                                        <Key frame="971" value="-0.305087" />
                                        <Key frame="996" value="8.04463" />
                                        <Key frame="1021" value="-5.31492" />
                                        <Key frame="1046" value="-12.9615" />
                                        <Key frame="1137" value="-14.1041" />
                                        <Key frame="1169" value="-5.22702" />
                                        <Key frame="1210" value="1.45275" />
                                        <Key frame="1257" value="1.45275" />
                                        <Key frame="1300" value="-3.64497" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="4.86473" />
                                        <Key frame="76" value="4.86473" />
                                        <Key frame="90" value="4.86473" />
                                        <Key frame="101" value="-11.8347" />
                                        <Key frame="128" value="-17.284" />
                                        <Key frame="136" value="-17.284" />
                                        <Key frame="167" value="-12.7136" />
                                        <Key frame="196" value="-9.11006" />
                                        <Key frame="221" value="-9.11006" />
                                        <Key frame="246" value="-25.1942" />
                                        <Key frame="259" value="-37.1475" />
                                        <Key frame="271" value="-25.1942" />
                                        <Key frame="284" value="-37.1475" />
                                        <Key frame="306" value="-19.5692" />
                                        <Key frame="326" value="-19.2176" />
                                        <Key frame="346" value="-35.6534" />
                                        <Key frame="371" value="-6.82487" />
                                        <Key frame="396" value="-4.89125" />
                                        <Key frame="434" value="-4.89125" />
                                        <Key frame="446" value="2.84322" />
                                        <Key frame="459" value="24.0251" />
                                        <Key frame="471" value="19.8063" />
                                        <Key frame="484" value="14.6207" />
                                        <Key frame="496" value="-7.52801" />
                                        <Key frame="509" value="3.18439" />
                                        <Key frame="521" value="-22.48" />
                                        <Key frame="534" value="-12.9877" />
                                        <Key frame="546" value="-9.29624" />
                                        <Key frame="571" value="-3.84695" />
                                        <Key frame="608" value="2.93111" />
                                        <Key frame="659" value="-8.49481" />
                                        <Key frame="684" value="-8.49481" />
                                        <Key frame="696" value="20.5973" />
                                        <Key frame="721" value="21.9157" />
                                        <Key frame="738" value="21.9157" />
                                        <Key frame="759" value="11.1929" />
                                        <Key frame="768" value="11.1929" />
                                        <Key frame="786" value="-22.3042" />
                                        <Key frame="805" value="-42.0695" />
                                        <Key frame="821" value="-36.1911" />
                                        <Key frame="834" value="-28.0068" />
                                        <Key frame="859" value="1.17328" />
                                        <Key frame="884" value="10.6656" />
                                        <Key frame="909" value="-0.682848" />
                                        <Key frame="934" value="10.6656" />
                                        <Key frame="959" value="-10.2526" />
                                        <Key frame="971" value="-10.2526" />
                                        <Key frame="996" value="-30.4677" />
                                        <Key frame="1021" value="-6.82487" />
                                        <Key frame="1046" value="0.558033" />
                                        <Key frame="1137" value="-0.936126" />
                                        <Key frame="1169" value="-7.44011" />
                                        <Key frame="1210" value="5.91943" />
                                        <Key frame="1257" value="5.91943" />
                                        <Key frame="1300" value="0.558033" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="-2.2118" />
                                        <Key frame="76" value="-2.2118" />
                                        <Key frame="90" value="-2.2118" />
                                        <Key frame="101" value="-1.77234" />
                                        <Key frame="128" value="3.41327" />
                                        <Key frame="136" value="3.41327" />
                                        <Key frame="167" value="11.5872" />
                                        <Key frame="196" value="15.8939" />
                                        <Key frame="221" value="15.8939" />
                                        <Key frame="246" value="1.65544" />
                                        <Key frame="259" value="20.3764" />
                                        <Key frame="271" value="1.65544" />
                                        <Key frame="284" value="20.3764" />
                                        <Key frame="306" value="8.77466" />
                                        <Key frame="326" value="10.093" />
                                        <Key frame="346" value="19.3217" />
                                        <Key frame="371" value="20.3764" />
                                        <Key frame="396" value="15.4544" />
                                        <Key frame="434" value="15.4544" />
                                        <Key frame="446" value="-10.6494" />
                                        <Key frame="459" value="6.13791" />
                                        <Key frame="471" value="-8.01265" />
                                        <Key frame="484" value="10.7083" />
                                        <Key frame="496" value="12.1146" />
                                        <Key frame="509" value="-7.64497" />
                                        <Key frame="521" value="-9.66648" />
                                        <Key frame="534" value="-18.8951" />
                                        <Key frame="546" value="3.25361" />
                                        <Key frame="571" value="14.7674" />
                                        <Key frame="608" value="22.7495" />
                                        <Key frame="659" value="23.4526" />
                                        <Key frame="684" value="23.4526" />
                                        <Key frame="696" value="17.1244" />
                                        <Key frame="721" value="9.4778" />
                                        <Key frame="738" value="9.4778" />
                                        <Key frame="759" value="16.597" />
                                        <Key frame="768" value="16.597" />
                                        <Key frame="786" value="-1.14098" />
                                        <Key frame="805" value="-21.0206" />
                                        <Key frame="821" value="7.99976" />
                                        <Key frame="834" value="24.9467" />
                                        <Key frame="859" value="-18.9991" />
                                        <Key frame="884" value="-20.3175" />
                                        <Key frame="909" value="-22.9381" />
                                        <Key frame="934" value="-20.3175" />
                                        <Key frame="959" value="18.1791" />
                                        <Key frame="971" value="18.1791" />
                                        <Key frame="996" value="24.9467" />
                                        <Key frame="1021" value="28.5503" />
                                        <Key frame="1046" value="19.3217" />
                                        <Key frame="1137" value="20.4643" />
                                        <Key frame="1169" value="10.5325" />
                                        <Key frame="1210" value="-20.2296" />
                                        <Key frame="1257" value="-20.2296" />
                                        <Key frame="1300" value="17.7396" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="23.6494" />
                                        <Key frame="76" value="23.6494" />
                                        <Key frame="90" value="23.6494" />
                                        <Key frame="101" value="39.6457" />
                                        <Key frame="128" value="37.7121" />
                                        <Key frame="136" value="37.7121" />
                                        <Key frame="167" value="4.8406" />
                                        <Key frame="196" value="1.58861" />
                                        <Key frame="221" value="1.58861" />
                                        <Key frame="246" value="34.7238" />
                                        <Key frame="259" value="8.18048" />
                                        <Key frame="271" value="34.7238" />
                                        <Key frame="284" value="8.18048" />
                                        <Key frame="306" value="28.835" />
                                        <Key frame="326" value="51.8627" />
                                        <Key frame="346" value="1.58861" />
                                        <Key frame="371" value="2.7312" />
                                        <Key frame="396" value="22.2432" />
                                        <Key frame="434" value="22.2432" />
                                        <Key frame="446" value="40.0852" />
                                        <Key frame="459" value="30.9444" />
                                        <Key frame="471" value="57.8393" />
                                        <Key frame="484" value="15.3876" />
                                        <Key frame="496" value="32.1749" />
                                        <Key frame="509" value="38.4602" />
                                        <Key frame="521" value="65.5309" />
                                        <Key frame="534" value="76.4" />
                                        <Key frame="546" value="28.5" />
                                        <Key frame="571" value="23.255" />
                                        <Key frame="608" value="1.76439" />
                                        <Key frame="659" value="1.6765" />
                                        <Key frame="684" value="1.6765" />
                                        <Key frame="696" value="1.6765" />
                                        <Key frame="721" value="47.1165" />
                                        <Key frame="738" value="47.1165" />
                                        <Key frame="759" value="10.3778" />
                                        <Key frame="768" value="10.3778" />
                                        <Key frame="786" value="41.8001" />
                                        <Key frame="805" value="87.6346" />
                                        <Key frame="821" value="23.4307" />
                                        <Key frame="834" value="2.64331" />
                                        <Key frame="859" value="1.41282" />
                                        <Key frame="884" value="3.08277" />
                                        <Key frame="909" value="3.39143" />
                                        <Key frame="934" value="3.08277" />
                                        <Key frame="959" value="2.29174" />
                                        <Key frame="971" value="2.29174" />
                                        <Key frame="996" value="9.93832" />
                                        <Key frame="1021" value="27.253" />
                                        <Key frame="1046" value="3.61012" />
                                        <Key frame="1137" value="1.85228" />
                                        <Key frame="1169" value="6.59843" />
                                        <Key frame="1210" value="1.85228" />
                                        <Key frame="1257" value="1.85228" />
                                        <Key frame="1300" value="1.6765" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="-14.094" />
                                        <Key frame="76" value="-14.094" />
                                        <Key frame="90" value="-14.094" />
                                        <Key frame="101" value="-24.4652" />
                                        <Key frame="128" value="-20.2464" />
                                        <Key frame="136" value="-20.2464" />
                                        <Key frame="167" value="-0.38289" />
                                        <Key frame="196" value="0.0565687" />
                                        <Key frame="221" value="0.0565687" />
                                        <Key frame="246" value="-4.6" />
                                        <Key frame="259" value="14.8" />
                                        <Key frame="271" value="-4.6" />
                                        <Key frame="284" value="14.1" />
                                        <Key frame="306" value="-18.2" />
                                        <Key frame="326" value="-34.0454" />
                                        <Key frame="346" value="3.3" />
                                        <Key frame="371" value="-4.5138" />
                                        <Key frame="396" value="-16.7308" />
                                        <Key frame="434" value="-16.7308" />
                                        <Key frame="446" value="-14.7" />
                                        <Key frame="459" value="-16.8" />
                                        <Key frame="471" value="-29.7" />
                                        <Key frame="484" value="-11.8967" />
                                        <Key frame="496" value="-26.1352" />
                                        <Key frame="509" value="-16.8" />
                                        <Key frame="521" value="-38.4" />
                                        <Key frame="534" value="-39.0556" />
                                        <Key frame="546" value="-17.5" />
                                        <Key frame="571" value="-17.0826" />
                                        <Key frame="608" value="-2.05283" />
                                        <Key frame="659" value="-1.70127" />
                                        <Key frame="684" value="-1.70127" />
                                        <Key frame="696" value="-0.207106" />
                                        <Key frame="721" value="-11.8" />
                                        <Key frame="738" value="-10.3" />
                                        <Key frame="759" value="0.583919" />
                                        <Key frame="768" value="0.583919" />
                                        <Key frame="786" value="-28.0691" />
                                        <Key frame="805" value="-49.778" />
                                        <Key frame="821" value="-10.1392" />
                                        <Key frame="834" value="-4.16223" />
                                        <Key frame="859" value="10.4278" />
                                        <Key frame="884" value="11.9" />
                                        <Key frame="909" value="9.28488" />
                                        <Key frame="934" value="11.9" />
                                        <Key frame="959" value="-6.7" />
                                        <Key frame="971" value="-10.3" />
                                        <Key frame="996" value="-7.5" />
                                        <Key frame="1021" value="-29.2114" />
                                        <Key frame="1046" value="8.3" />
                                        <Key frame="1137" value="4.27537" />
                                        <Key frame="1169" value="-2.31651" />
                                        <Key frame="1210" value="10.0762" />
                                        <Key frame="1257" value="10.0762" />
                                        <Key frame="1300" value="1.90229" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                        <Key frame="33" value="-3.76606" />
                                        <Key frame="76" value="-3.76606" />
                                        <Key frame="90" value="-3.76606" />
                                        <Key frame="101" value="10.3" />
                                        <Key frame="128" value="10.3" />
                                        <Key frame="136" value="10.3" />
                                        <Key frame="167" value="13.4" />
                                        <Key frame="196" value="10.3" />
                                        <Key frame="221" value="10.3" />
                                        <Key frame="246" value="15" />
                                        <Key frame="259" value="17.4" />
                                        <Key frame="271" value="17.4" />
                                        <Key frame="284" value="21.3" />
                                        <Key frame="306" value="13.4" />
                                        <Key frame="326" value="16.6" />
                                        <Key frame="346" value="33.2" />
                                        <Key frame="371" value="9.5" />
                                        <Key frame="396" value="3.9" />
                                        <Key frame="434" value="3.2" />
                                        <Key frame="446" value="-5.34811" />
                                        <Key frame="459" value="-3.2" />
                                        <Key frame="471" value="-7.9" />
                                        <Key frame="484" value="-8.7" />
                                        <Key frame="496" value="1.59534" />
                                        <Key frame="509" value="0.8" />
                                        <Key frame="521" value="7.9" />
                                        <Key frame="534" value="6.28172" />
                                        <Key frame="546" value="10.3" />
                                        <Key frame="571" value="-1.10118" />
                                        <Key frame="608" value="-4.46919" />
                                        <Key frame="659" value="8.7" />
                                        <Key frame="684" value="2.03479" />
                                        <Key frame="696" value="-12.9068" />
                                        <Key frame="721" value="3.9" />
                                        <Key frame="738" value="3.2" />
                                        <Key frame="759" value="-7.98486" />
                                        <Key frame="768" value="-7.98486" />
                                        <Key frame="786" value="11.1158" />
                                        <Key frame="805" value="6.07781" />
                                        <Key frame="821" value="18.8502" />
                                        <Key frame="834" value="19.7" />
                                        <Key frame="859" value="9.5" />
                                        <Key frame="884" value="-0.250391" />
                                        <Key frame="909" value="5.31492" />
                                        <Key frame="934" value="-0.250391" />
                                        <Key frame="959" value="7.9" />
                                        <Key frame="971" value="11.8" />
                                        <Key frame="996" value="22.9" />
                                        <Key frame="1021" value="2.38636" />
                                        <Key frame="1046" value="10.3" />
                                        <Key frame="1137" value="7.83565" />
                                        <Key frame="1169" value="3.79263" />
                                        <Key frame="1210" value="-1.65666" />
                                        <Key frame="1257" value="-1.65666" />
                                        <Key frame="1300" value="-4.29341" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Stand Up (1)" id="8" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="534" y="281">
                            <bitmap>media/images/box/movement/stand.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                            <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="StandUpBehavior">
                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                            <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                    <Choice value="Crouch" />
                                                    <Choice value="LyingBack" />
                                                    <Choice value="LyingBelly" />
                                                    <Choice value="Sit" />
                                                    <Choice value="SitRelax" />
                                                    <Choice value="StandInit" />
                                                    <Choice value="Stand" />
                                                    <Choice value="StandZero" />
                                                </Parameter>
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                                <Resource name="Stiffness" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="All motors" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Tactile Head (1)" id="7" localization="8" tooltip="Detect touch on head tactile sensor." x="274" y="388">
                            <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                            <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                            <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
                            <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
                            <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
                            <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                                            <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Head-sequence" type="Lock" timeout="0" />
                        </Box>
                        <Box name="WakeUp" id="9" localization="0" tooltip="Call a Wake Up process.&#x0A;Stiff all joints and apply stand Init posture if the robot is Stand" x="880" y="824">
                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.wakeUp()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Resource name="All motors" type="Lock" timeout="0" />
                            <Resource name="Stiffness" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Rest" id="10" localization="0" tooltip="Call a Rest process.&#x0A;Apply crouch posture if the robot is Stand then unStiff all joints" x="1081" y="70">
                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.rest()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Resource name="All motors" type="Lock" timeout="0" />
                            <Resource name="Stiffness" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Bumpers" id="11" localization="8" tooltip="Listen to bumpers sensors. Stimulate onLeft or onRight output depending on&#x0A;which bumper is stimulated." x="983" y="342">
                            <bitmap>media/images/box/movement/move_foot.png</bitmap>
                            <bitmap>media/images/box/movement/move_leftfoot.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="LeftBumperPressed" type="0" type_size="1" nature="4" stm_value_name="LeftBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                            <Input name="RightBumperPressed" type="0" type_size="1" nature="4" stm_value_name="RightBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="6" />
                            <Output name="onLeft" type="1" type_size="1" nature="2" inner="0" tooltip="When left bumper is stimulated." id="7" />
                            <Output name="onRight" type="1" type_size="1" nature="2" inner="0" tooltip="When right bumper is stimulated." id="8" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="196" y="61">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            </Box>
                                            <Box name="If &gt; 0" id="4" localization="8" tooltip="Transmit only if value is &gt; 0." x="197" y="165">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="7" outputowner="2" indexofoutput="3" />
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="8" outputowner="4" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Goto Posture (1)" id="12" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="914" y="138">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Crouch" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                <Choice value="Crouch" />
                                <Choice value="LyingBack" />
                                <Choice value="LyingBelly" />
                                <Choice value="Sit" />
                                <Choice value="SitRelax" />
                                <Choice value="StandInit" />
                                <Choice value="Stand" />
                                <Choice value="StandZero" />
                            </Parameter>
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                            <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                            <Resource name="All motors" type="Lock" timeout="0" />
                            <Resource name="Stiffness" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="295" y="161">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Tá, parei ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <arabic>
                                                        <![CDATA[]]>
</arabic>
                                                    <czech>
                                                        <![CDATA[Ahoj]]>
</czech>
                                                    <danish>
                                                        <![CDATA[Hej]]>
</danish>
                                                    <german>
                                                        <![CDATA[Hallo]]>
</german>
                                                    <greek>
                                                        <![CDATA[]]>
</greek>
                                                    <english>
                                                        <![CDATA[Hello]]>
</english>
                                                    <spanish>
                                                        <![CDATA[Hola]]>
</spanish>
                                                    <finnish>
                                                        <![CDATA[Hei]]>
</finnish>
                                                    <french>
                                                        <![CDATA[Bonjour]]>
</french>
                                                    <italian>
                                                        <![CDATA[Ciao]]>
</italian>
                                                    <japanese>
                                                        <![CDATA[こんにちは]]>
</japanese>
                                                    <korean>
                                                        <![CDATA[안녕하세요]]>
</korean>
                                                    <dutch>
                                                        <![CDATA[Hallo]]>
</dutch>
                                                    <norwegian>
                                                        <![CDATA[]]>
</norwegian>
                                                    <polish>
                                                        <![CDATA[Cześć]]>
</polish>
                                                    <brazilian>
                                                        <![CDATA[Tá, parei]]>
</brazilian>
                                                    <portuguese>
                                                        <![CDATA[Olá]]>
</portuguese>
                                                    <russian>
                                                        <![CDATA[Привет]]>
</russian>
                                                    <swedish>
                                                        <![CDATA[Hallå]]>
</swedish>
                                                    <turkish>
                                                        <![CDATA[Merhaba]]>
</turkish>
                                                    <chinese>
                                                        <![CDATA[]]>
</chinese>
                                                    <language>-1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Speech" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Divulgacao Rino" id="2" localization="8" tooltip="" x="591" y="529">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="6_story_fin" id="2" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="494" y="556">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        pass

    def onInput_onStop(self):
        self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="315">
                                                    <BehaviorLayer name="LED">
                                                        <BehaviorKeyframe name="music" index="30">
                                                            <Diagram scale="100">
                                                                <Box name="Light_SpeakEyes" id="1" localization="8" tooltip="Use this gaze when Nao has to speak.&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_SpeakEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="209" y="132">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self)

  def onUnload(self):
    #puts code for box cleanup here
    pass

  def onInput_onStart(self):
    rDuration = 0.05;
    ALLeds.fadeRGB( "FaceLeds", 0x8585ff, rDuration );
    self.onStopped()

  def onInput_onStop(self):
    pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="normal2" index="268">
                                                            <Diagram scale="100">
                                                                <Box name="Light_WaitingEyes" id="1" localization="8" tooltip="Set An Animated Gaze Which Expresses Waiting&#x0A;*** ref box in: ./4_localize/animation/Lights/Neutral/Light_WaitingEyes.xar ***&#x0A;*** last modification date(svn): 2009-07-10 14:44:45 +0200 (ven. 10 juil. 2009) ***" x="256" y="173">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;
    rDuration = 1.0;
    ALLeds.fadeRGB( "FaceLeds", 0x00ff00, rDuration );
    time.sleep( rDuration );

    while( not self.bMustStop ):
      rTime=1.0
      ALLeds.post.fadeRGB( "FaceLedsTop", 0x000000, rTime );
      ALLeds.fadeRGB( "FaceLedsBottom", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      ALLeds.post.fadeRGB( "FaceLedsTop", 0x00ff00, rTime );
      ALLeds.fadeRGB( "FaceLedsBottom", 0x00ff00, rTime );

    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="fx">
                                                        <BehaviorKeyframe name="music" index="25">
                                                            <Diagram scale="100">
                                                                <Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="112" y="30">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="File path" inherits_from_parent="0" content_type="4" value="/music-sw-fade.wav" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                    <Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                        <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                    </Box>
                                                                                    <Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                                        <bitmap>media/images/box/folder.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("File path"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                        <Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="Nao">
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-3.2544" />
                                                            <Key frame="80" value="2.28278" />
                                                            <Key frame="286" value="2.107" />
                                                            <Key frame="315" value="12.9177" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-5.45169" />
                                                            <Key frame="80" value="30.6718" />
                                                            <Key frame="286" value="-15.6471" />
                                                            <Key frame="315" value="6.23791" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="57.303" />
                                                            <Key frame="80" value="31.9902" />
                                                            <Key frame="286" value="12.654" />
                                                            <Key frame="311" value="85.2526" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="1.93121" />
                                                            <Key frame="80" value="24.6952" />
                                                            <Key frame="286" value="21.5311" />
                                                            <Key frame="311" value="14.1482" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-63.0208" />
                                                            <Key frame="80" value="-14.8561" />
                                                            <Key frame="286" value="-5.10012" />
                                                            <Key frame="311" value="-45.1787" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-62.8402" />
                                                            <Key frame="80" value="-88.5046" />
                                                            <Key frame="286" value="-89.2077" />
                                                            <Key frame="311" value="-41.4825" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-2.90283" />
                                                            <Key frame="80" value="-55.6379" />
                                                            <Key frame="286" value="-63.8997" />
                                                            <Key frame="309" value="-22.5027" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="0.126935" />
                                                            <Key frame="80" value="0.143299" />
                                                            <Key frame="286" value="0.141481" />
                                                            <Key frame="309" value="0.142935" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="68.9095" />
                                                            <Key frame="80" value="40.3447" />
                                                            <Key frame="286" value="24.5242" />
                                                            <Key frame="311" value="77.3471" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-4.92434" />
                                                            <Key frame="80" value="-16.3503" />
                                                            <Key frame="286" value="-19.3386" />
                                                            <Key frame="311" value="-6.15482" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="61.9613" />
                                                            <Key frame="80" value="18.1912" />
                                                            <Key frame="286" value="17.3123" />
                                                            <Key frame="311" value="38.7578" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="80.9507" />
                                                            <Key frame="80" value="88.9488" />
                                                            <Key frame="286" value="87.6305" />
                                                            <Key frame="311" value="51.507" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="59.8519" />
                                                            <Key frame="80" value="55.3694" />
                                                            <Key frame="286" value="45.7013" />
                                                            <Key frame="309" value="74.8813" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="0.329844" />
                                                            <Key frame="80" value="0.331298" />
                                                            <Key frame="286" value="0.330571" />
                                                            <Key frame="309" value="0.331298" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-38.8481" />
                                                            <Key frame="72" value="-25.7523" />
                                                            <Key frame="80" value="-25.7523" />
                                                            <Key frame="286" value="-11.1622" />
                                                            <Key frame="314" value="-27.9496" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="15.3811" />
                                                            <Key frame="72" value="2.46097" />
                                                            <Key frame="80" value="2.46097" />
                                                            <Key frame="286" value="-1.0547" />
                                                            <Key frame="314" value="17.051" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-39.8635" />
                                                            <Key frame="72" value="-34.6779" />
                                                            <Key frame="80" value="-34.6779" />
                                                            <Key frame="286" value="6.36752" />
                                                            <Key frame="314" value="18.145" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="123.233" />
                                                            <Key frame="72" value="123.146" />
                                                            <Key frame="80" value="123.146" />
                                                            <Key frame="286" value="0" />
                                                            <Key frame="314" value="14.9509" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-54.102" />
                                                            <Key frame="72" value="-67.6373" />
                                                            <Key frame="80" value="-67.6373" />
                                                            <Key frame="286" value="3.02763" />
                                                            <Key frame="314" value="-7.51937" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-5.97664" />
                                                            <Key frame="72" value="0.351567" />
                                                            <Key frame="80" value="0.351567" />
                                                            <Key frame="286" value="0.351567" />
                                                            <Key frame="314" value="-9.49231" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-0.966809" />
                                                            <Key frame="72" value="1.40627" />
                                                            <Key frame="80" value="1.40627" />
                                                            <Key frame="286" value="-4.04302" />
                                                            <Key frame="314" value="-4.92194" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-27.4708" />
                                                            <Key frame="72" value="-35.6447" />
                                                            <Key frame="80" value="-35.6447" />
                                                            <Key frame="286" value="7.51011" />
                                                            <Key frame="314" value="27.8242" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="123.058" />
                                                            <Key frame="72" value="122.706" />
                                                            <Key frame="80" value="122.706" />
                                                            <Key frame="286" value="0" />
                                                            <Key frame="314" value="0" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-66.7584" />
                                                            <Key frame="72" value="-66.5826" />
                                                            <Key frame="80" value="-66.5826" />
                                                            <Key frame="286" value="2.3245" />
                                                            <Key frame="314" value="2.50029" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                            <Key frame="35" value="-3.33989" />
                                                            <Key frame="72" value="-2.54886" />
                                                            <Key frame="80" value="-2.54886" />
                                                            <Key frame="286" value="5.09772" />
                                                            <Key frame="314" value="4.04302" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                                <Resource name="Standing" type="Lock" timeout="0" />
                                                <Resource name="HeadYaw" type="Lock" timeout="0" />
                                                <Resource name="HeadPitch" type="Lock" timeout="0" />
                                                <Resource name="LShoulderPitch" type="Lock" timeout="0" />
                                                <Resource name="LShoulderRoll" type="Lock" timeout="0" />
                                                <Resource name="LElbowRoll" type="Lock" timeout="0" />
                                                <Resource name="LElbowYaw" type="Lock" timeout="0" />
                                                <Resource name="LWristYaw" type="Lock" timeout="0" />
                                                <Resource name="LHand" type="Lock" timeout="0" />
                                                <Resource name="RShoulderPitch" type="Lock" timeout="0" />
                                                <Resource name="RShoulderRoll" type="Lock" timeout="0" />
                                                <Resource name="RElbowRoll" type="Lock" timeout="0" />
                                                <Resource name="RElbowYaw" type="Lock" timeout="0" />
                                                <Resource name="RWristYaw" type="Lock" timeout="0" />
                                                <Resource name="RHand" type="Lock" timeout="0" />
                                                <Resource name="LHipYawPitch" type="Lock" timeout="0" />
                                                <Resource name="LHipRoll" type="Lock" timeout="0" />
                                                <Resource name="LHipPitch" type="Lock" timeout="0" />
                                                <Resource name="LKneePitch" type="Lock" timeout="0" />
                                                <Resource name="LAnklePitch" type="Lock" timeout="0" />
                                                <Resource name="LAnkleRoll" type="Lock" timeout="0" />
                                                <Resource name="RHipRoll" type="Lock" timeout="0" />
                                                <Resource name="RHipPitch" type="Lock" timeout="0" />
                                                <Resource name="RKneePitch" type="Lock" timeout="0" />
                                                <Resource name="RAnklePitch" type="Lock" timeout="0" />
                                                <Resource name="RAnkleRoll" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Rest" id="4" localization="0" tooltip="Call a Rest process.&#x0A;Apply crouch posture if the robot is Stand then unStiff all joints" x="970" y="123">
                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.motion.rest()
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                                <Resource name="Stiffness" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Animated Say" id="5" localization="8" tooltip="Say some text with animations. Note that you must open the box to enter the text." x="658" y="132">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="90" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Parameter name="Body language mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user. ex: ^start(...) or ^tag(...)&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                                    <Choice value="disabled" />
                                                    <Choice value="random" />
                                                    <Choice value="contextual" />
                                                </Parameter>
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Animated Say Text" id="2" localization="8" tooltip="Say the text received on its input and move during its speech." x="578" y="34">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.animSpeech = ALProxy('ALAnimatedSpeech')

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.animSpeech.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            configuration =\
            {"bodyLanguageMode":self.getParameter("Body language mode")}
            id = self.animSpeech.post.say(str(sentence), configuration)
            self.ids.append(id)
            self.animSpeech.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                    <Parameter name="Body language mode" inherits_from_parent="1" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user. ex: ^start(...) or ^tag(...)&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                                                        <Choice value="disabled" />
                                                                        <Choice value="random" />
                                                                        <Choice value="contextual" />
                                                                    </Parameter>
                                                                </Box>
                                                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="276" y="74">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " ^start(animations/Stand/Gestures/Hey_1) Ahoj ^wait(animations/Stand/Gestures/Hey_1) ",
			"Danish" : " ^start(animations/Stand/Gestures/Hey_1) Hej ^wait(animations/Stand/Gestures/Hey_1) ",
			"German" : " ^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1) ",
			"Greek" : "  ",
			"English" : " ^start(animations/Stand/Gestures/Hey_1) Hello ^wait(animations/Stand/Gestures/Hey_1) ",
			"Spanish" : " ^start(animations/Stand/Gestures/Hey_1) Hola ^wait(animations/Stand/Gestures/Hey_1) ",
			"Finnish" : " ^start(animations/Stand/Gestures/Hey_1) Hei ^wait(animations/Stand/Gestures/Hey_1) ",
			"French" : " ^start(animations/Stand/Gestures/Hey_1) Bonjour ^wait(animations/Stand/Gestures/Hey_1) ",
			"Italian" : " ^start(animations/Stand/Gestures/Hey_1) Ciao ^wait(animations/Stand/Gestures/Hey_1) ",
			"Japanese" : " watashi wa konoju o ai suru ",
			"Korean" : " ^start(animations/Stand/Gestures/Hey_1) 안녕하세요 ^wait(animations/Stand/Gestures/Hey_1) ",
			"Dutch" : " ^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1) ",
			"Norwegian" : "  ",
			"Polish" : " ^start(animations/Stand/Gestures/Hey_1) Cześć ^wait(animations/Stand/Gestures/Hey_1) ",
			"Brazilian" : " Olá, eu sou o NAO, e faço parte da equipe de robótica Rinobot Team, da U F J F. Eu e meus colegas aqui presentes, viajamos pelo Brasil para competir e trazer troféus para casa. Quer conhecer mais sobre nossa equipe? Siga-nos nas redes sociais, arroba rinobot brasil ",
			"Portuguese" : " ^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1) ",
			"Russian" : " ^start(animations/Stand/Gestures/Hey_1) Привет ^wait(animations/Stand/Gestures/Hey_1) ",
			"Swedish" : " ^start(animations/Stand/Gestures/Hey_1) Hallå ^wait(animations/Stand/Gestures/Hey_1) ",
			"Turkish" : " ^start(animations/Stand/Gestures/Hey_1) Merhaba ^wait(animations/Stand/Gestures/Hey_1) ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <arabic>
                                                                            <![CDATA[]]>
</arabic>
                                                                        <czech>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Ahoj ^wait(animations/Stand/Gestures/Hey_1)]]>
</czech>
                                                                        <danish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hej ^wait(animations/Stand/Gestures/Hey_1)]]>
</danish>
                                                                        <german>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1)]]>
</german>
                                                                        <greek>
                                                                            <![CDATA[]]>
</greek>
                                                                        <english>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hello ^wait(animations/Stand/Gestures/Hey_1)]]>
</english>
                                                                        <spanish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hola ^wait(animations/Stand/Gestures/Hey_1)]]>
</spanish>
                                                                        <finnish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hei ^wait(animations/Stand/Gestures/Hey_1)]]>
</finnish>
                                                                        <french>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Bonjour ^wait(animations/Stand/Gestures/Hey_1)]]>
</french>
                                                                        <italian>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Ciao ^wait(animations/Stand/Gestures/Hey_1)]]>
</italian>
                                                                        <japanese>
                                                                            <![CDATA[watashi wa konoju o ai suru]]>
</japanese>
                                                                        <korean>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) 안녕하세요 ^wait(animations/Stand/Gestures/Hey_1)]]>
</korean>
                                                                        <dutch>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallo ^wait(animations/Stand/Gestures/Hey_1)]]>
</dutch>
                                                                        <norwegian>
                                                                            <![CDATA[]]>
</norwegian>
                                                                        <polish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Cześć ^wait(animations/Stand/Gestures/Hey_1)]]>
</polish>
                                                                        <brazilian>
                                                                            <![CDATA[Olá, eu sou o NAO, e faço parte da equipe de robótica Rinobot Team, da U F J F. Eu e meus colegas aqui presentes, viajamos pelo Brasil para competir e trazer troféus para casa. Quer conhecer mais sobre nossa equipe? Siga-nos nas redes sociais, arroba rinobot brasil]]>
</brazilian>
                                                                        <portuguese>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Olá ^wait(animations/Stand/Gestures/Hey_1)]]>
</portuguese>
                                                                        <russian>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Привет ^wait(animations/Stand/Gestures/Hey_1)]]>
</russian>
                                                                        <swedish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Hallå ^wait(animations/Stand/Gestures/Hey_1)]]>
</swedish>
                                                                        <turkish>
                                                                            <![CDATA[^start(animations/Stand/Gestures/Hey_1) Merhaba ^wait(animations/Stand/Gestures/Hey_1)]]>
</turkish>
                                                                        <chinese>
                                                                            <![CDATA[]]>
</chinese>
                                                                        <language>17</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="134" y="342">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="File name" inherits_from_parent="0" content_type="4" value="" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                    <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                        <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                    </Box>
                                                                                    <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                                        <bitmap>media/images/box/folder.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                        <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Audio player" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Hands" id="3" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="365" y="392">
                                                                    <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                                                        <Choice value="Both" />
                                                                        <Choice value="Left" />
                                                                        <Choice value="Right" />
                                                                    </Parameter>
                                                                    <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Open the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                                                        <Choice value="Open the hand" />
                                                                        <Choice value="Close the hand" />
                                                                    </Parameter>
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="130" y="86">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="5" indexofinput="2" outputowner="8" indexofoutput="4" />
                        <Link inputowner="10" indexofinput="2" outputowner="12" indexofoutput="4" />
                        <Link inputowner="11" indexofinput="2" outputowner="10" indexofoutput="4" />
                        <Link inputowner="9" indexofinput="2" outputowner="11" indexofoutput="7" />
                        <Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="8" />
                        <Link inputowner="12" indexofinput="2" outputowner="5" indexofoutput="4" />
                        <Link inputowner="12" indexofinput="2" outputowner="6" indexofoutput="4" />
                        <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="4" />
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                        <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="8" />
                        <Link inputowner="6" indexofinput="2" outputowner="7" indexofoutput="9" />
                        <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="10" />
                        <Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
